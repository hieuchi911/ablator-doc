Search.setIndex({"docnames": ["ablator", "ablator.analysis", "ablator.analysis.plot", "ablator.config", "ablator.main", "ablator.main.model", "ablator.modules", "ablator.modules.loggers", "ablator.modules.metrics", "ablator.modules.storage", "ablator.utils", "index", "modules"], "filenames": ["ablator.rst", "ablator.analysis.rst", "ablator.analysis.plot.rst", "ablator.config.rst", "ablator.main.rst", "ablator.main.model.rst", "ablator.modules.rst", "ablator.modules.loggers.rst", "ablator.modules.metrics.rst", "ablator.modules.storage.rst", "ablator.utils.rst", "index.rst", "modules.rst"], "titles": ["ablator package", "ablator.analysis package", "ablator.analysis.plot package", "ablator.config package", "ablator.main package", "ablator.main.model package", "ablator.modules package", "ablator.modules.loggers package", "ablator.modules.metrics package", "ablator.modules.storage package", "ablator.utils package", "Welcome to ablator\u2019s documentation!", "ablator"], "terms": {"analysi": [0, 11, 12], "plot": [0, 1, 11], "submodul": [0, 11, 12], "cat_plot": [0, 1, 11], "main": [0, 6, 11, 12], "num_plot": [0, 1, 11], "util": [0, 1, 5, 11, 12], "metric_nam": [0, 1, 11], "result": [0, 2, 4, 7, 8, 10, 11, 12], "read_result": [0, 1, 11], "process_row": [0, 1, 11], "config": [0, 1, 2, 5, 7, 11, 12], "configbas": [0, 1, 3, 4, 6, 7, 9, 11], "annot": [0, 3, 11], "assert_st": [0, 3, 11], "assert_unambigi": [0, 3, 11], "config_class": [0, 3, 4, 6, 7, 9, 11], "diff": [0, 3, 11], "diff_str": [0, 3, 11], "get_annot_type_with_dot_path": [0, 3, 11], "get_type_with_dot_path": [0, 3, 11], "get_val_with_dot_path": [0, 3, 11], "kei": [0, 1, 2, 3, 4, 5, 8, 10, 11], "load": [0, 1, 3, 5, 11], "make_dict": [0, 3, 11], "merg": [0, 3, 11], "to_dict": [0, 3, 6, 8, 11], "to_dot_path": [0, 3, 11], "to_str": [0, 3, 11], "to_yaml": [0, 3, 11], "uid": [0, 3, 4, 5, 11], "write": [0, 3, 4, 7, 11], "miss": [0, 3, 11], "configclass": [0, 3, 11], "type": [0, 1, 4, 5, 6, 8, 10, 11, 12], "collect": [0, 3, 4, 5, 8, 11], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "state": [0, 3, 5, 10, 11, 12], "variable_typ": [0, 3, 11], "deriv": [0, 3, 5, 6, 11], "dict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11], "enum": [0, 3, 4, 11], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "stateless": [0, 3, 4, 11], "tupl": [0, 3, 4, 5, 6, 11], "get_annotation_st": [0, 3, 11], "parse_type_hint": [0, 3, 11], "parse_valu": [0, 3, 11], "dict_hash": [0, 3, 11], "flatten_nested_dict": [0, 3, 11], "model": [0, 4, 6, 7, 10, 11], "wrapper": [0, 4, 11], "modelconfig": [0, 4, 5, 11], "optim": [0, 1, 2, 3, 4, 5, 10, 11, 12], "max": [0, 4, 6, 11], "min": [0, 4, 6, 11], "parallelconfig": [0, 1, 4, 11], "concurrent_tri": [0, 4, 11], "cpus_per_experi": [0, 4, 11], "gcp_config": [0, 4, 11], "gpu_mb_per_experi": [0, 4, 11], "ignore_invalid_param": [0, 4, 11], "optim_metr": [0, 1, 2, 4, 11], "remote_config": [0, 4, 11], "search_algo": [0, 4, 11], "search_spac": [0, 1, 4, 11], "total_tri": [0, 4, 11], "runconfig": [0, 4, 5, 7, 11], "amp": [0, 4, 5, 11], "devic": [0, 4, 5, 10, 11], "divergence_factor": [0, 4, 11], "early_stopping_it": [0, 4, 11], "eval_epoch": [0, 4, 11], "eval_subsampl": [0, 4, 11], "experiment_dir": [0, 1, 4, 5, 11], "init_chkpt": [0, 4, 11], "keep_n_checkpoint": [0, 4, 7, 11], "log_epoch": [0, 4, 11], "metrics_mb_limit": [0, 4, 11], "metrics_n_batch": [0, 4, 11], "model_config": [0, 4, 5, 11], "random_se": [0, 4, 5, 11], "tensorboard": [0, 4, 7, 11], "train_config": [0, 4, 5, 11], "verbos": [0, 4, 5, 6, 7, 9, 11], "warm_up_epoch": [0, 4, 11], "searchalgo": [0, 4, 11], "random": [0, 4, 5, 10, 11], "tpe": [0, 4, 11], "searchspac": [0, 4, 11], "categorical_valu": [0, 4, 11], "value_rang": [0, 4, 11], "value_typ": [0, 4, 11], "searchtyp": [0, 4, 11], "integ": [0, 4, 8, 10, 11], "numer": [0, 1, 2, 4, 8, 11], "trainconfig": [0, 4, 5, 11], "batch_siz": [0, 1, 4, 11], "dataset": [0, 4, 5, 11], "epoch": [0, 4, 5, 6, 11], "optimizer_config": [0, 4, 5, 11], "rand_weights_init": [0, 4, 11], "scheduler_config": [0, 4, 5, 11], "mp": [0, 11, 12], "paralleltrain": [0, 4, 11], "evalu": [0, 4, 5, 6, 7, 8, 11], "kill_idl": [0, 4, 11], "launch": [0, 4, 11], "sync_down": [0, 4, 11], "sync_up": [0, 4, 11], "parse_metr": [0, 4, 11], "parse_rsync_path": [0, 4, 11], "train_main_remot": [0, 4, 11], "proto": [0, 11, 12], "prototrain": [0, 4, 11], "pre_train_setup": [0, 4, 11], "smoke_test": [0, 4, 5, 11], "sync": [0, 4, 11], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "metadata": [0, 4, 7, 11], "registri": [0, 4, 11], "experimentst": [0, 4, 11], "all_trial": [0, 4, 11], "all_trials_uid": [0, 4, 11], "complete_tri": [0, 4, 11], "failed_tri": [0, 4, 11], "n_trials_remain": [0, 4, 11], "pending_tri": [0, 4, 11], "pruned_duplicate_tri": [0, 4, 11], "pruned_errored_tri": [0, 4, 11], "running_tri": [0, 4, 11], "sample_tri": [0, 4, 11], "search_space_dot_path": [0, 4, 11], "tune_trial_str": [0, 4, 11], "update_trial_st": [0, 4, 11], "optunast": [0, 4, 11], "update_tri": [0, 4, 11], "trial": [0, 4, 11], "config_param": [0, 4, 11], "config_uid": [0, 4, 11], "id": [0, 4, 11], "metric": [0, 1, 2, 4, 5, 6, 7, 11], "optuna_trial_num": [0, 4, 11], "runtime_error": [0, 4, 11], "trialstat": [0, 4, 11], "complet": [0, 4, 11], "fail": [0, 4, 6, 7, 9, 11], "prune": [0, 4, 11], "pruned_dupl": [0, 4, 11], "pruned_invalid": [0, 4, 11], "pruned_poor_perform": [0, 4, 11], "recoverable_error": [0, 4, 11], "run": [0, 1, 4, 5, 6, 9, 11], "wait": [0, 4, 9, 11], "to_optuna_st": [0, 4, 11], "augment_trial_kwarg": [0, 4, 11], "sample_trial_param": [0, 4, 11], "logger": [0, 4, 5, 6, 9, 11], "file": [0, 1, 3, 4, 5, 6, 9, 11, 12], "tensor": [0, 5, 6, 8, 10, 11], "store": [0, 4, 6, 7, 11], "storag": [0, 4, 6, 11], "cloud": [0, 4, 6, 11], "remot": [0, 4, 6, 11], "adamconfig": [0, 6, 11], "beta": [0, 6, 11], "init_optim": [0, 6, 11], "weight_decai": [0, 6, 11], "adamwconfig": [0, 6, 11], "ep": [0, 6, 11], "optimizerarg": [0, 6, 11], "lr": [0, 4, 6, 8, 11], "optimizerconfig": [0, 4, 5, 6, 11], "argument": [0, 4, 6, 7, 8, 11], "make_optim": [0, 6, 11], "name": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11], "sgdconfig": [0, 6, 11], "momentum": [0, 6, 11], "get_optim_paramet": [0, 6, 11], "get_parameter_nam": [0, 6, 11], "schedul": [0, 4, 5, 11, 12], "onecycleconfig": [0, 6, 11], "init_schedul": [0, 6, 11], "max_lr": [0, 6, 11], "step_when": [0, 6, 11], "total_step": [0, 4, 5, 6, 11], "plateuaconfig": [0, 6, 11], "factor": [0, 6, 11], "min_lr": [0, 6, 11], "mode": [0, 6, 11], "patienc": [0, 6, 11], "threshold": [0, 6, 11], "schedulerarg": [0, 6, 11], "schedulerconfig": [0, 4, 5, 6, 11], "make_schedul": [0, 6, 11], "steplrconfig": [0, 6, 11], "gamma": [0, 6, 11], "step_siz": [0, 6, 11], "dummi": [0, 5, 10, 11], "apply_lambda_to_it": [0, 10, 11], "debugger_is_act": [0, 10, 11], "get_gpu_max_mem": [0, 10, 11], "get_gpu_mem": [0, 10, 11], "get_latest_chkpt": [0, 10, 11], "get_lr": [0, 10, 11], "init_weight": [0, 10, 11], "iter_to_devic": [0, 10, 11], "iter_to_numpi": [0, 10, 11], "parse_devic": [0, 10, 11], "set_se": [0, 10, 11], "clean_checkpoint": [0, 6, 7, 10, 11], "default_val_pars": [0, 10, 11], "dict_to_json": [0, 10, 11], "json_to_dict": [0, 10, 11], "make_sub_dir": [0, 10, 11], "nested_set": [0, 10, 11], "save_checkpoint": [0, 10, 11], "categor": [1, 2], "data_typ": [1, 2], "violinplot": [1, 2], "plotanalysi": [1, 2], "make_figur": [1, 2], "make_linearplot": [1, 2], "make_violinplot": [1, 2], "linearplot": [1, 2], "parse_name_remap": [1, 2], "make": [1, 2, 5, 8], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "datafram": [1, 2, 7], "categorical_attribut": [1, 2], "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "numerical_attribut": [1, 2], "save_dir": [1, 2], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9], "cach": [1, 2, 8], "fals": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "object": [1, 3, 4, 5, 6, 7, 8, 10], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "analyz": [1, 2], "experiment": 1, "attribut": [1, 2, 3, 4, 5, 6, 7, 8, 9], "dictionari": [1, 2, 3, 4, 5, 7, 8, 10], "map": [1, 2, 4], "direct": [1, 4, 6], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "directori": [1, 4, 5, 7, 10], "save": [1, 5, 7, 10], "memori": [1, 4, 5, 8, 10], "joblib": 1, "all": [1, 3, 4, 5, 8, 9, 10], "hyperparamet": [1, 4], "experiment_attribut": 1, "pd": [1, 7], "extract": 1, "from": [1, 3, 4, 5, 8, 9, 10], "given": [1, 3, 4, 5, 6, 7, 8, 9, 10], "properti": [1, 3, 4, 5, 8], "pathlib": [1, 4, 7, 10], "path": [1, 2, 3, 4, 5, 7, 9, 10], "bool": [1, 3, 4, 5, 6, 7, 8, 9, 10], "use_rai": 1, "process": [1, 4, 5, 9], "experi": [1, 3, 4, 5], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "configur": [1, 3, 4, 5, 6, 7, 9], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "whether": [1, 3, 4, 5, 7, 8, 9], "default": [1, 2, 3, 4, 5, 6, 7, 8, 10], "rai": [1, 4], "parallel": [1, 4], "metric_map": 1, "data": [1, 4, 5, 7, 8, 10], "refer": [1, 4], "more": [1, 3, 4, 5], "detail": [1, 4, 5], "config_attr": 1, "optimiz": 1, "ty": [1, 3, 4, 5, 8, 10], "ani": [1, 3, 4, 5, 6, 8, 10], "search": [1, 4, 11], "space": [1, 4], "get": [1, 3, 4, 6, 8, 10], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10], "classmethod": [1, 3], "config_typ": 1, "num_cpu": 1, "read": 1, "multipl": [1, 5, 6, 7], "enabl": [1, 5, 10], "thi": [1, 3, 4, 5, 6, 7, 8, 10], "function": [1, 4, 5, 8, 10], "call": [1, 5, 7], "mani": [1, 5], "time": [1, 5, 7], "int": [1, 3, 4, 5, 6, 7, 8, 9, 10], "number": [1, 3, 4, 5, 6, 7, 8, 10], "cpu": [1, 4, 5, 10], "row": 1, "aux_info": 1, "conform": 1, "json": [1, 7, 10], "format": [1, 3, 7, 10], "updat": [1, 4, 5, 6, 7, 8, 10], "auxiliari": [1, 5, 8], "inform": [1, 3, 4, 5, 10], "input": [1, 2, 3, 10], "expect": 1, "like": [1, 3, 5], "string": [1, 3, 4, 5, 10], "addit": [1, 3, 4, 5], "valu": [1, 3, 4, 5, 6, 7, 8, 10], "pair": [1, 4, 8], "ad": 1, "combin": 1, "cannot": 1, "pars": [1, 3, 4, 5, 10], "rais": [1, 2, 3, 4, 5, 7, 8, 9, 10], "assertionerror": [1, 3, 5, 7, 8, 9], "If": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "ar": [1, 2, 3, 4, 5, 6, 8, 10], "overlap": 1, "column": 1, "between": [1, 3, 4, 5], "exampl": [1, 2, 3, 4, 5, 6, 8, 10], "john": 1, "doe": 1, "ag": 1, "30": [1, 8], "citi": 1, "san": 1, "francisco": 1, "25": [1, 8], "json_path": 1, "an": [1, 3, 4, 5, 6, 7, 8, 10], "them": [1, 4, 5, 7, 10], "panda": 1, "each": [1, 5, 6, 7, 10], "append": [1, 6, 8], "yaml": [1, 3, 7], "i": [1, 3, 4, 5, 6, 7, 8, 9, 10], "index": [1, 11], "contain": [1, 3, 4, 5, 7, 8, 10], "except": [1, 4, 5, 7, 8, 9], "error": [1, 3, 4, 6, 7, 9], "caught": 1, "traceback": 1, "print": [1, 4, 5, 6, 7, 9], "run_id": 1, "run_1": 1, "accuraci": [1, 5], "0": [1, 3, 4, 5, 6, 8, 10], "85": [1, 8], "loss": [1, 4, 5, 8], "35": [1, 8], "run_2": 1, "87": [1, 8], "32": [1, 4], "experiment_nam": 1, "my": 1, "64": 1, "1": [1, 3, 4, 5, 6, 7, 8, 10], "arg": [2, 3, 4, 6, 7, 8, 9, 10], "kwarg": [2, 3, 4, 6, 7, 8, 9, 10], "metric_name_remap": 2, "attribute_name_remap": 2, "plt_kwarg": 2, "attribute_nam": 2, "union": [2, 3, 4, 5, 6, 7, 8, 9, 10], "seri": 2, "metric_obj_fn": 2, "y_axi": 2, "x_axi": 2, "x_tick": 2, "ndarrai": [2, 7, 8], "ax": 2, "name_map": 2, "output": [2, 9], "remap": 2, "onli": [2, 3, 5, 6, 7, 8], "notimplementederror": 2, "both": [2, 4], "attr1": 2, "attr2": 2, "attr3": 2, "new_attr2": 2, "attr4": 2, "attr4_renam": 2, "name_remap": 2, "assert": [2, 3], "abc": [2, 5, 7, 8], "add_attribut": [3, 4, 6, 7, 9], "first": [3, 4], "check": [3, 4, 5, 10], "unannot": 3, "variabl": 3, "insid": [3, 4, 6], "child": 3, "note": [3, 4, 5, 7, 8, 10], "must": [3, 5, 8], "decor": 3, "ha": [3, 4, 8], "valid": [3, 5], "compar": 3, "true": [3, 4, 5, 6, 7, 8, 9, 10], "otherwis": [3, 4, 5, 7, 10], "unambigu": 3, "requir": [3, 5, 8], "ambigu": 3, "alia": [3, 4, 6, 7, 9], "ignore_stateless": 3, "differ": [3, 4, 8], "current": [3, 4, 5, 7, 8, 10], "anoth": 3, "ignor": [3, 4, 5], "let": 3, "": [3, 4, 5, 6, 7, 8], "sai": 3, "we": [3, 4, 6, 8], "have": [3, 4], "two": [3, 4], "config1": 3, "config2": 3, "follow": [3, 5, 8], "learning_r": [3, 5], "01": 3, "adam": 3, "num_lay": 3, "3": [3, 4, 5, 8], "02": 3, "sgd": [3, 6], "would": 3, "look": 3, "float": [3, 4, 5, 6, 7, 8, 10], "In": [3, 4], "dot_path": 3, "dot": [3, 4], "notat": 3, "keysview": 3, "flatten": [3, 8], "creat": [3, 5, 6, 10], "represent": [3, 4, 10], "nest": [3, 10], "self": [3, 4, 7], "convert": [3, 4, 10], "uniqu": [3, 4, 5], "identifi": [3, 4, 5], "defin": [3, 4, 5, 6, 8], "cl": 3, "subclass": [3, 5, 6], "add": [3, 4, 7, 8], "field": 3, "2": [3, 4, 8, 10], "gener": [3, 4, 5], "t": [3, 10], "dure": [3, 4, 5], "custom": [3, 4, 5, 8], "provid": [3, 5, 6, 7, 8], "equal": [3, 4, 8], "hash": 3, "method": [3, 4, 5, 6, 7, 8], "import": [3, 8], "_enum": 3, "color": [3, 7], "red": 3, "green": 3, "blue": 3, "__eq__": 3, "__o": 3, "instanc": [3, 5], "__hash__": 3, "calcul": [3, 5, 8], "iter": [3, 4, 5, 7, 8, 10], "fix": 3, "By": 3, "type_hint": 3, "do": [3, 8], "need": [3, 10], "can": [3, 4, 5, 6, 8, 10], "take": [3, 9], "assign": 3, "hint": 3, "namedtupl": 3, "val": [3, 5, 6, 8, 10], "guid": 3, "runtimeerror": [3, 4], "hash_len": 3, "4": [3, 4, 8], "md5": 3, "one": [3, 10], "One": [3, 6], "length": [3, 5, 8], "_dict": [3, 10], "expand_list": 3, "seper": 3, "expand": 3, "specifi": [3, 4, 5, 7, 8, 10], "separ": 3, "join": 3, "evaluationerror": [4, 5], "logsteperror": [4, 5], "modelbas": [4, 5], "checkpoint": [4, 5, 6, 7, 9, 10], "config_pars": [4, 5], "create_model": [4, 5], "current_epoch": [4, 5], "epoch_len": [4, 5], "eval_itr": [4, 5], "evaluation_funct": [4, 5, 8], "load_checkpoint": [4, 5], "log_itr": [4, 5], "make_dataload": [4, 5], "save_dict": [4, 5, 7], "train": [4, 5, 6, 7, 8], "train_stat": [4, 5], "trainplateauerror": [4, 5], "modelwrapp": [4, 5], "apply_loss": [4, 5], "aux_metr": [4, 5], "create_optim": [4, 5], "create_scal": [4, 5], "create_schedul": [4, 5], "custom_evalu": [4, 5], "eval": [4, 5], "log": [4, 5, 7], "log_step": [4, 5], "make_dataloader_test": [4, 5], "make_dataloader_train": [4, 5], "make_dataloader_v": [4, 5], "mock_train": [4, 5], "model_step": [4, 5], "reset_optimizer_schedul": [4, 5], "status_messag": [4, 5], "to_devic": [4, 5], "train_loop": [4, 5], "train_step": [4, 5], "update_statu": [4, 5], "validation_loop": [4, 5], "when": [4, 5, 6, 8], "initi": [4, 5, 6, 8, 10], "pass": [4, 6, 7, 8], "constructor": 4, "total": [4, 5, 6, 10], "concurr": 4, "eg": 4, "10": [4, 6, 8], "val_loss": [4, 8], "algorithm": 4, "invalid": 4, "sampl": [4, 8], "remoteconfig": [4, 6, 9], "gcpconfig": [4, 6, 9], "gcp": 4, "locat": 4, "artifact": 4, "seed": [4, 5, 10], "latest": [4, 8, 10], "keep": [4, 7, 8, 10], "tensorboardlogg": [4, 6, 7], "automat": [4, 5], "mix": [4, 5, 8], "precis": [4, 5], "gpu": [4, 5, 10], "cuda": [4, 5, 10], "liter": [4, 5, 6, 10], "consol": [4, 7], "tqdm": [4, 5], "silent": 4, "level": 4, "fraction": 4, "batch": [4, 5, 8], "everi": [4, 7], "tag": [4, 5, 7, 8], "test": [4, 5], "100": [4, 6, 8], "megabyt": 4, "maximum": [4, 10], "allow": [4, 8], "last": 4, "best": [4, 5, 7], "befor": [4, 8], "appli": [4, 5, 6, 8, 10], "earli": [4, 5], "stop": [4, 5], "trigger": 4, "current_itr": 4, "best_itr": 4, "exce": 4, "set": [4, 5, 7, 8, 10], "interv": [4, 5], "mark": 4, "warm": 4, "up": [4, 7, 8], "cur_loss": 4, "best_loss": [4, 5], "consid": 4, "diverg": 4, "mayb": 4, "loader": 4, "size": [4, 8], "weight": [4, 5, 10], "randomli": 4, "run_config": [4, 5, 7], "perform": [4, 5, 7], "optuna": 4, "tune": 4, "thei": [4, 10], "also": [4, 5], "databas": 4, "filelogg": [4, 6, 7, 9], "messag": [4, 6, 7], "experiment_st": 4, "manag": [4, 8], "gpu_mem_bottleneck": 4, "minimum": 4, "capac": 4, "avail": [4, 10], "per": 4, "total_mem_usag": 4, "amount": 4, "usag": [4, 5], "synchron": 4, "googl": [4, 9], "server": 4, "kill": [4, 9], "idl": 4, "working_directori": 4, "auxilary_modul": 4, "ray_head_address": 4, "auto": [4, 6], "includ": [4, 5], "prepar": 4, "cluster": 4, "bucket": [4, 6, 9], "work": [4, 6], "runtim": 4, "track": [4, 7], "progress": [4, 5], "retriev": [4, 10], "exist": 4, "push": 4, "node": [4, 9], "so": [4, 5, 6, 7, 8], "execut": 4, "after": [4, 5, 6, 8, 10], "finish": [4, 8, 9], "record": [4, 5], "sqlite": 4, "chang": [4, 6], "back": 4, "via": 4, "rsync_up": [4, 6, 9], "code": [4, 5, 7, 8], "moduletyp": 4, "environ": 4, "address": 4, "should": [4, 5, 6, 10], "previous": 4, "resum": [4, 7], "down": 4, "other": [4, 5], "optim_direct": 4, "resolv": 4, "job": 4, "correspond": 4, "rsynced_fold": 4, "root_fold": 4, "being": [4, 6], "root": 4, "folder": 4, "local_path": [4, 9], "remote_path": [4, 6, 9], "which": [4, 5, 6, 8], "local": [4, 9], "mp_logger": 4, "root_dir": 4, "fault_toller": 4, "crash_exceptions_typ": 4, "where": [4, 7, 8, 10], "happen": 4, "done": [4, 5], "document": 4, "toller": 4, "crash": 4, "aka": [4, 8], "ceas": [4, 6], "lossdivergederror": [4, 6, 8], "indic": [4, 5, 7, 8], "resourc": 4, "prototyp": 4, "extern": 4, "servic": 4, "e": [4, 5, 6, 8], "g": [4, 8], "trainmetr": [4, 5, 6, 7, 8], "debug": [4, 5], "while": [4, 5, 7, 8], "avoid": 4, "stall": 4, "share": 4, "trainer": [4, 5, 6], "smoke": [4, 5], "declarativebas": 4, "classvar": 4, "_schema": 4, "new": [4, 6, 8, 9, 10], "tabl": [4, 7], "orm_declarative_metadata": 4, "_registrytyp": 4, "sqlalchemi": 4, "orm": 4, "decl_api": 4, "_orm": 4, "mapper": 4, "associ": [4, 7, 8], "exclud": [4, 9], "unschedul": 4, "pend": 4, "ones": 4, "n_trials_to_sampl": 4, "n": [4, 10], "miniumn": 4, "minu": 4, "been": 4, "static": [4, 5, 8], "tell": 4, "fje_2211": 4, "study_nam": 4, "studi": 4, "ordereddict": [4, 5], "order": [4, 5, 8], "minim": 4, "maxim": 4, "optuna_studi": 4, "trial_num": 4, "pickletyp": 4, "intenum": 4, "enumer": 4, "possibl": 4, "succesfulli": 4, "becaus": [4, 5, 8], "variou": 4, "reason": [4, 6], "produc": 4, "yet": 4, "wa": 4, "alreadi": 4, "present": 4, "poor": 4, "optunatrialst": 4, "6": 4, "5": [4, 6, 8], "7": [4, 6], "8": 4, "_state": 4, "applic": 4, "trial_kwarg": 4, "augment": 4, "b": [4, 10], "c": [4, 10], "d": 4, "metric_direct": 4, "inf": 4, "optuna_tri": 4, "valueerror": [4, 8, 10], "ask": 4, "x": [4, 8], "y": 4, "z": 4, "030961748695615783": 4, "9": [4, 6], "model_class": 5, "torch": [5, 6, 8, 10], "nn": [5, 6, 10], "remov": [5, 10], "boiler": 5, "plate": 5, "extens": 5, "support": 5, "case": [5, 8], "paradigm": 5, "user": 5, "implement": [5, 6], "specif": [5, 8], "creation": 5, "simpli": 5, "pleas": 5, "out": 5, "docstr": 5, "abstract": [5, 6, 7], "behavior": 5, "some": [5, 7, 8], "oper": 5, "float32": 5, "datatyp": 5, "lower": [5, 6], "point": 5, "float16": 5, "reduc": [5, 6, 8], "ordinarili": 5, "mean": [5, 8], "autocast": 5, "gradscal": 5, "togeth": 5, "http": 5, "pytorch": [5, 7], "org": 5, "doc": 5, "stabl": 5, "html": 5, "definit": 5, "structur": [5, 10], "train_dataload": 5, "dataload": 5, "respons": 5, "val_dataload": 5, "test_dataload": 5, "summarylogg": [5, 6, 7], "tutil": 5, "program": 5, "model_dir": [5, 7], "chosen": 5, "region": 5, "choos": 5, "improv": [5, 6], "maintain": 5, "master": 5, "train_tqdm": 5, "bar": 5, "displai": 5, "real": 5, "remain": 5, "proce": 5, "current_checkpoint": 5, "learn": [5, 6, 10], "rate": [5, 6, 10], "current_st": 5, "currrent": 5, "necessari": 5, "step": [5, 6], "current_iter": 5, "best_iter": 5, "lowest": 5, "encount": 5, "is_best": [5, 7], "see": [5, 8], "far": [5, 7, 8], "strict_load": 5, "etc": 5, "strictli": 5, "ensur": 5, "match": [5, 8, 10], "exactli": 5, "partial": 5, "repres": [5, 7, 10], "its": [5, 8], "callabl": [5, 8, 10], "model_onli": 5, "statist": 5, "achiev": 5, "around": 5, "over": 5, "writabl": 5, "scaler": 5, "_lrschedul": [5, 6], "reducelronplateau": [5, 6], "gradient": 5, "output_dict": 5, "comput": 5, "It": [5, 7, 10], "filenam": [5, 10], "optimizer_st": 5, "scaler_st": 5, "scheduler_st": 5, "final": 5, "singl": [5, 8], "post": 5, "pickl": 5, "distribut": [5, 10], "run_async": [5, 9], "block": 5, "multiprocess": 5, "context": 5, "mock": 5, "infer": 5, "reset": [5, 6, 7, 8], "recreat": 5, "dictinoari": 5, "move": [5, 8, 10], "averag": [5, 8], "keyboard": 5, "interrupt": 5, "along": 5, "stat": 5, "descript": 5, "subsampl": 5, "either": 5, "endc": [6, 7], "warn": [6, 7], "info": [6, 7], "set_path": [6, 7], "set_prefix": [6, 7], "duplicaterunerror": [6, 7], "chkpt_dir": [6, 7], "chkpt_dir_nam": [6, 7], "chkpt_dir_valu": [6, 7], "config_file_nam": [6, 7], "log_file_nam": [6, 7], "metadata_json": [6, 7], "results_json_nam": [6, 7], "summary_dir_nam": [6, 7], "add_imag": [6, 7], "add_scalar": [6, 7], "add_tabl": [6, 7], "add_text": [6, 7], "write_config": [6, 7], "loggerbas": [6, 7], "loggerconfig": [6, 7], "make_logg": [6, 7], "append_batch": [6, 8], "update_ma_metr": [6, 8], "update_static_metr": [6, 8], "arraystor": [6, 8], "movingaverag": [6, 8], "predictionstor": [6, 8], "exclude_chkpt": [6, 9], "exclude_glob": [6, 9], "list_bucket": [6, 9], "rsync_down": [6, 9], "rsync_down_nod": [6, 9], "hostnam": [6, 9], "port": [6, 9], "usernam": [6, 9], "run_cmd_wait": [6, 9], "999": 6, "1e": 6, "08": 6, "only_requires_grad": 6, "setup": 6, "well": 6, "you": 6, "want": 6, "someth": 6, "els": 6, "init": 6, "through": 6, "overrid": 6, "forbidden_layer_typ": 6, "forbidden": 6, "layer": [6, 10], "onecyclelr": 6, "upper": 6, "boundari": 6, "cycl": 6, "steptyp": 6, "invok": 6, "monitor": 6, "whose": 6, "bound": 6, "adjust": 6, "accordingli": 6, "certain": 6, "new_lr": 6, "measur": 6, "optimum": 6, "focu": 6, "signific": 6, "stdout": 6, "05": 6, "0001": 6, "steplr": 6, "period": 6, "decai": 6, "99": [6, 8], "20": 6, "prefix": 7, "ansi": 7, "escap": 7, "text": 7, "x1b": 7, "0m": 7, "91m": 7, "93m": 7, "msg": 7, "summari": 7, "log_iter": 7, "checkpoint_iter": 7, "determin": 7, "appropri": 7, "log_file_path": 7, "dashboard": 7, "result_json_path": 7, "recent": 7, "best_checkpoint": 7, "file_nam": 7, "itr": 7, "most": 7, "construct": 7, "select": 7, "_": 7, "010": 7, "pt": [7, 10], "increas": 7, "increment": 7, "larger": 7, "than": [7, 9], "clean": 7, "posit": [7, 8], "keyword": 7, "greater": 7, "summary_dir": 7, "visual": 7, "backend_logg": 7, "summarywrit": 7, "k": 7, "v": 7, "dataformat": 7, "chw": 7, "imag": 7, "np": [7, 8], "scalar": [7, 8], "batch_limit": 8, "memory_limit": 8, "100000000": 8, "moving_average_limit": 8, "3000": 8, "static_aux_metr": 8, "moving_aux_metr": 8, "predict": 8, "limit": 8, "onlin": 8, "label": 8, "kwrag": 8, "categori": 8, "easi": 8, "pred": 8, "train_metr": 8, "lambda": 8, "arrai": [8, 10], "50": 8, "update_ma": 8, "possibli": 8, "those": 8, "flag": 8, "empti": 8, "val_mean": 8, "among": 8, "line": 8, "sinc": 8, "62": 8, "sequenc": [8, 10], "sum": 8, "aux": 8, "previou": 8, "nan": 8, "never": 8, "75": 8, "train_mean": 8, "train_loss": 8, "metric_dict": 8, "train_sum": 8, "val_sum": 8, "static_aux_attribut": 8, "Not": 8, "item": 8, "preset": 8, "manipul": 8, "numpi": [8, 10], "constrain": 8, "exceed": 8, "kept": 8, "show": 8, "array_stor": 8, "1000": 8, "rang": 8, "arr": 8, "90": 8, "91": 8, "92": 8, "93": 8, "94": 8, "95": 8, "96": 8, "97": 8, "98": 8, "As": 8, "soon": 8, "5th": 8, "104": 8, "therefor": 8, "ma_stor": 8, "70": 8, "71": 8, "72": 8, "73": 8, "74": 8, "76": 8, "77": 8, "78": 8, "79": 8, "80": 8, "81": 8, "82": 8, "83": 8, "84": 8, "86": 8, "88": 8, "89": 8, "score": 8, "pred_stor": 8, "333333333333334": 8, "glob": 9, "rsync": 9, "destin": 9, "itself": 9, "download": 9, "node_hostnam": 9, "upload": 9, "timeout_": 9, "start": [9, 10], "timeout": 9, "second": 9, "command": 9, "asynchron": 9, "cmd": 9, "300": 9, "raise_error": 9, "longer": 9, "timeoutexpir": 9, "fn": 10, "element": 10, "recurs": 10, "within": 10, "debugg": 10, "activ": 10, "mem_typ": 10, "free": 10, "depend": 10, "checkpoint_dir": 10, "sort": 10, "earliest": 10, "linear": 10, "normal": 10, "mu": 10, "std": 10, "bias": 10, "zero": 10, "embed": 10, "pad": 10, "vector": 10, "layernorm": 10, "data_dict": 10, "target": 10, "replac": 10, "equival": 10, "doesn": 10, "checkpoint_fold": 10, "n_checkpoint": 10, "compat": 10, "_json": 10, "parent": 10, "dir_nam": 10, "subdirectori": 10, "under": 10, "packag": [11, 12], "subpackag": [11, 12], "modul": [11, 12], "page": 11, "content": 12}, "objects": {"": [[0, 0, 0, "-", "ablator"]], "ablator": [[1, 0, 0, "-", "analysis"], [3, 0, 0, "-", "config"], [4, 0, 0, "-", "main"], [6, 0, 0, "-", "modules"], [10, 0, 0, "-", "utils"]], "ablator.analysis": [[1, 0, 0, "-", "main"], [2, 0, 0, "-", "plot"], [1, 0, 0, "-", "results"]], "ablator.analysis.main": [[1, 1, 1, "", "Analysis"]], "ablator.analysis.main.Analysis": [[1, 2, 1, "", "metric_names"]], "ablator.analysis.plot": [[2, 1, 1, "", "Plot"], [2, 0, 0, "-", "cat_plot"], [2, 0, 0, "-", "main"], [2, 0, 0, "-", "num_plot"], [2, 0, 0, "-", "utils"]], "ablator.analysis.plot.Plot": [[2, 3, 1, "", "make"]], "ablator.analysis.plot.cat_plot": [[2, 1, 1, "", "Categorical"], [2, 1, 1, "", "ViolinPlot"]], "ablator.analysis.plot.cat_plot.Categorical": [[2, 4, 1, "", "DATA_TYPE"]], "ablator.analysis.plot.main": [[2, 1, 1, "", "PlotAnalysis"]], "ablator.analysis.plot.main.PlotAnalysis": [[2, 3, 1, "", "make_figures"], [2, 3, 1, "", "make_linearplot"], [2, 3, 1, "", "make_violinplot"]], "ablator.analysis.plot.num_plot": [[2, 1, 1, "", "LinearPlot"], [2, 1, 1, "", "Numerical"]], "ablator.analysis.plot.num_plot.Numerical": [[2, 4, 1, "", "DATA_TYPE"]], "ablator.analysis.plot.utils": [[2, 5, 1, "", "parse_name_remap"]], "ablator.analysis.results": [[1, 1, 1, "", "Results"], [1, 5, 1, "", "process_row"], [1, 5, 1, "", "read_result"]], "ablator.analysis.results.Results": [[1, 2, 1, "", "metric_names"], [1, 3, 1, "", "read_results"]], "ablator.config": [[3, 0, 0, "-", "main"], [3, 0, 0, "-", "types"], [3, 0, 0, "-", "utils"]], "ablator.config.main": [[3, 1, 1, "", "ConfigBase"], [3, 1, 1, "", "Missing"], [3, 5, 1, "", "configclass"]], "ablator.config.main.ConfigBase": [[3, 2, 1, "", "annotations"], [3, 3, 1, "", "assert_state"], [3, 3, 1, "", "assert_unambigious"], [3, 4, 1, "", "config_class"], [3, 3, 1, "", "diff"], [3, 3, 1, "", "diff_str"], [3, 3, 1, "", "get_annot_type_with_dot_path"], [3, 3, 1, "", "get_type_with_dot_path"], [3, 3, 1, "", "get_val_with_dot_path"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "make_dict"], [3, 3, 1, "", "merge"], [3, 3, 1, "", "to_dict"], [3, 3, 1, "", "to_dot_path"], [3, 3, 1, "", "to_str"], [3, 3, 1, "", "to_yaml"], [3, 2, 1, "", "uid"], [3, 3, 1, "", "write"]], "ablator.config.types": [[3, 1, 1, "", "Annotation"], [3, 1, 1, "", "Derived"], [3, 1, 1, "", "Dict"], [3, 1, 1, "", "Enum"], [3, 1, 1, "", "List"], [3, 1, 1, "", "Optional"], [3, 1, 1, "", "Stateful"], [3, 1, 1, "", "Stateless"], [3, 1, 1, "", "Tuple"], [3, 5, 1, "", "get_annotation_state"], [3, 5, 1, "", "parse_type_hint"], [3, 5, 1, "", "parse_value"]], "ablator.config.types.Annotation": [[3, 4, 1, "", "collection"], [3, 4, 1, "", "optional"], [3, 4, 1, "", "state"], [3, 4, 1, "", "variable_type"]], "ablator.config.utils": [[3, 5, 1, "", "dict_hash"], [3, 5, 1, "", "flatten_nested_dict"]], "ablator.main": [[4, 0, 0, "-", "configs"], [5, 0, 0, "-", "model"], [4, 0, 0, "-", "mp"], [4, 0, 0, "-", "proto"], [4, 0, 0, "-", "state"]], "ablator.main.configs": [[4, 1, 1, "", "ModelConfig"], [4, 1, 1, "", "Optim"], [4, 1, 1, "", "ParallelConfig"], [4, 1, 1, "", "RunConfig"], [4, 1, 1, "", "SearchAlgo"], [4, 1, 1, "", "SearchSpace"], [4, 1, 1, "", "SearchType"], [4, 1, 1, "", "TrainConfig"]], "ablator.main.configs.ModelConfig": [[4, 4, 1, "", "config_class"]], "ablator.main.configs.Optim": [[4, 4, 1, "", "max"], [4, 4, 1, "", "min"]], "ablator.main.configs.ParallelConfig": [[4, 4, 1, "", "concurrent_trials"], [4, 4, 1, "", "config_class"], [4, 4, 1, "", "cpus_per_experiment"], [4, 4, 1, "", "gcp_config"], [4, 4, 1, "", "gpu_mb_per_experiment"], [4, 4, 1, "", "ignore_invalid_params"], [4, 4, 1, "", "optim_metrics"], [4, 4, 1, "", "remote_config"], [4, 4, 1, "", "search_algo"], [4, 4, 1, "", "search_space"], [4, 4, 1, "", "total_trials"]], "ablator.main.configs.RunConfig": [[4, 4, 1, "", "amp"], [4, 4, 1, "", "config_class"], [4, 4, 1, "", "device"], [4, 4, 1, "", "divergence_factor"], [4, 4, 1, "", "early_stopping_iter"], [4, 4, 1, "", "eval_epoch"], [4, 4, 1, "", "eval_subsample"], [4, 4, 1, "", "experiment_dir"], [4, 4, 1, "", "init_chkpt"], [4, 4, 1, "", "keep_n_checkpoints"], [4, 4, 1, "", "log_epoch"], [4, 4, 1, "", "metrics_mb_limit"], [4, 4, 1, "", "metrics_n_batches"], [4, 4, 1, "", "model_config"], [4, 4, 1, "", "random_seed"], [4, 4, 1, "", "tensorboard"], [4, 4, 1, "", "train_config"], [4, 2, 1, "", "uid"], [4, 4, 1, "", "verbose"], [4, 4, 1, "", "warm_up_epochs"]], "ablator.main.configs.SearchAlgo": [[4, 4, 1, "", "random"], [4, 4, 1, "", "tpe"]], "ablator.main.configs.SearchSpace": [[4, 4, 1, "", "categorical_values"], [4, 4, 1, "", "config_class"], [4, 4, 1, "", "value_range"], [4, 4, 1, "", "value_type"]], "ablator.main.configs.SearchType": [[4, 4, 1, "", "integer"], [4, 4, 1, "", "numerical"]], "ablator.main.configs.TrainConfig": [[4, 4, 1, "", "batch_size"], [4, 4, 1, "", "config_class"], [4, 4, 1, "", "dataset"], [4, 4, 1, "", "epochs"], [4, 4, 1, "", "optimizer_config"], [4, 4, 1, "", "rand_weights_init"], [4, 4, 1, "", "scheduler_config"]], "ablator.main.model": [[5, 0, 0, "-", "main"], [5, 0, 0, "-", "wrapper"]], "ablator.main.model.main": [[5, 6, 1, "", "EvaluationError"], [5, 6, 1, "", "LogStepError"], [5, 1, 1, "", "ModelBase"], [5, 6, 1, "", "TrainPlateauError"]], "ablator.main.model.main.ModelBase": [[5, 3, 1, "", "checkpoint"], [5, 3, 1, "", "config_parser"], [5, 3, 1, "", "create_model"], [5, 2, 1, "", "current_epoch"], [5, 2, 1, "", "epoch_len"], [5, 2, 1, "", "eval_itr"], [5, 3, 1, "", "evaluate"], [5, 3, 1, "", "evaluation_functions"], [5, 3, 1, "", "load_checkpoint"], [5, 2, 1, "", "log_itr"], [5, 3, 1, "", "make_dataloaders"], [5, 3, 1, "", "save_dict"], [5, 3, 1, "", "train"], [5, 2, 1, "", "train_stats"], [5, 2, 1, "", "uid"]], "ablator.main.model.wrapper": [[5, 1, 1, "", "ModelWrapper"]], "ablator.main.model.wrapper.ModelWrapper": [[5, 3, 1, "", "apply_loss"], [5, 3, 1, "", "aux_metrics"], [5, 3, 1, "", "checkpoint"], [5, 3, 1, "", "config_parser"], [5, 3, 1, "", "create_model"], [5, 3, 1, "", "create_optimizer"], [5, 3, 1, "", "create_scaler"], [5, 3, 1, "", "create_scheduler"], [5, 3, 1, "", "custom_evaluation"], [5, 3, 1, "", "eval"], [5, 3, 1, "", "evaluate"], [5, 3, 1, "", "evaluation_functions"], [5, 3, 1, "", "load_checkpoint"], [5, 3, 1, "", "log"], [5, 3, 1, "", "log_step"], [5, 3, 1, "", "make_dataloader_test"], [5, 3, 1, "", "make_dataloader_train"], [5, 3, 1, "", "make_dataloader_val"], [5, 3, 1, "", "make_dataloaders"], [5, 3, 1, "", "mock_train"], [5, 2, 1, "", "model_config"], [5, 3, 1, "", "model_step"], [5, 3, 1, "", "reset_optimizer_scheduler"], [5, 3, 1, "", "save_dict"], [5, 3, 1, "", "status_message"], [5, 3, 1, "", "to_device"], [5, 2, 1, "", "total_steps"], [5, 3, 1, "", "train"], [5, 2, 1, "", "train_config"], [5, 3, 1, "", "train_loop"], [5, 3, 1, "", "train_step"], [5, 3, 1, "", "update_status"], [5, 3, 1, "", "validation_loop"]], "ablator.main.mp": [[4, 1, 1, "", "ParallelTrainer"], [4, 5, 1, "", "parse_metrics"], [4, 5, 1, "", "parse_rsync_paths"], [4, 5, 1, "", "train_main_remote"]], "ablator.main.mp.ParallelTrainer": [[4, 3, 1, "", "evaluate"], [4, 3, 1, "", "kill_idle"], [4, 3, 1, "", "launch"], [4, 3, 1, "", "sync_down"], [4, 3, 1, "", "sync_up"]], "ablator.main.proto": [[4, 1, 1, "", "ProtoTrainer"]], "ablator.main.proto.ProtoTrainer": [[4, 3, 1, "", "evaluate"], [4, 3, 1, "", "launch"], [4, 3, 1, "", "pre_train_setup"], [4, 3, 1, "", "smoke_test"], [4, 3, 1, "", "sync"]], "ablator.main.state": [[4, 1, 1, "", "Base"], [4, 1, 1, "", "ExperimentState"], [4, 1, 1, "", "OptunaState"], [4, 1, 1, "", "Trial"], [4, 1, 1, "", "TrialState"], [4, 5, 1, "", "augment_trial_kwargs"], [4, 5, 1, "", "parse_metrics"], [4, 5, 1, "", "sample_trial_params"]], "ablator.main.state.Base": [[4, 4, 1, "", "metadata"], [4, 4, 1, "", "registry"]], "ablator.main.state.ExperimentState": [[4, 2, 1, "", "all_trials"], [4, 2, 1, "", "all_trials_uid"], [4, 2, 1, "", "complete_trials"], [4, 2, 1, "", "failed_trials"], [4, 2, 1, "", "n_trials_remaining"], [4, 2, 1, "", "pending_trials"], [4, 2, 1, "", "pruned_duplicate_trials"], [4, 2, 1, "", "pruned_errored_trials"], [4, 2, 1, "", "running_trials"], [4, 3, 1, "", "sample_trials"], [4, 3, 1, "", "search_space_dot_path"], [4, 3, 1, "", "tune_trial_str"], [4, 3, 1, "", "update_trial_state"]], "ablator.main.state.OptunaState": [[4, 3, 1, "", "sample_trial"], [4, 3, 1, "", "update_trial"]], "ablator.main.state.Trial": [[4, 4, 1, "", "config_param"], [4, 4, 1, "", "config_uid"], [4, 4, 1, "", "id"], [4, 4, 1, "", "metrics"], [4, 4, 1, "", "optuna_trial_num"], [4, 4, 1, "", "runtime_errors"], [4, 4, 1, "", "state"]], "ablator.main.state.TrialState": [[4, 4, 1, "", "COMPLETE"], [4, 4, 1, "", "FAIL"], [4, 4, 1, "", "PRUNED"], [4, 4, 1, "", "PRUNED_DUPLICATE"], [4, 4, 1, "", "PRUNED_INVALID"], [4, 4, 1, "", "PRUNED_POOR_PERFORMANCE"], [4, 4, 1, "", "RECOVERABLE_ERROR"], [4, 4, 1, "", "RUNNING"], [4, 4, 1, "", "WAITING"], [4, 3, 1, "", "to_optuna_state"]], "ablator.modules": [[7, 0, 0, "-", "loggers"], [8, 0, 0, "-", "metrics"], [6, 0, 0, "-", "optimizer"], [6, 0, 0, "-", "scheduler"], [9, 0, 0, "-", "storage"]], "ablator.modules.loggers": [[7, 1, 1, "", "LoggerBase"], [7, 1, 1, "", "LoggerConfig"], [7, 0, 0, "-", "file"], [7, 0, 0, "-", "main"], [7, 0, 0, "-", "tensor"]], "ablator.modules.loggers.LoggerBase": [[7, 3, 1, "", "add_image"], [7, 3, 1, "", "add_scalar"], [7, 3, 1, "", "add_scalars"], [7, 3, 1, "", "add_table"], [7, 3, 1, "", "add_text"], [7, 3, 1, "", "write_config"]], "ablator.modules.loggers.LoggerConfig": [[7, 4, 1, "", "config_class"], [7, 3, 1, "", "make_logger"]], "ablator.modules.loggers.file": [[7, 1, 1, "", "FileLogger"]], "ablator.modules.loggers.file.FileLogger": [[7, 4, 1, "", "ENDC"], [7, 4, 1, "", "FAIL"], [7, 4, 1, "", "WARNING"], [7, 3, 1, "", "error"], [7, 3, 1, "", "info"], [7, 3, 1, "", "set_path"], [7, 3, 1, "", "set_prefix"], [7, 3, 1, "", "warn"]], "ablator.modules.loggers.main": [[7, 6, 1, "", "DuplicateRunError"], [7, 1, 1, "", "SummaryLogger"]], "ablator.modules.loggers.main.SummaryLogger": [[7, 4, 1, "", "CHKPT_DIRS"], [7, 4, 1, "", "CHKPT_DIR_NAMES"], [7, 4, 1, "", "CHKPT_DIR_VALUES"], [7, 4, 1, "", "CONFIG_FILE_NAME"], [7, 4, 1, "", "LOG_FILE_NAME"], [7, 4, 1, "", "METADATA_JSON"], [7, 4, 1, "", "RESULTS_JSON_NAME"], [7, 4, 1, "", "SUMMARY_DIR_NAME"], [7, 3, 1, "", "checkpoint"], [7, 3, 1, "", "clean_checkpoints"], [7, 3, 1, "", "error"], [7, 3, 1, "", "info"], [7, 3, 1, "", "update"], [7, 3, 1, "", "warn"]], "ablator.modules.loggers.tensor": [[7, 1, 1, "", "TensorboardLogger"]], "ablator.modules.loggers.tensor.TensorboardLogger": [[7, 3, 1, "", "add_image"], [7, 3, 1, "", "add_scalar"], [7, 3, 1, "", "add_scalars"], [7, 3, 1, "", "add_table"], [7, 3, 1, "", "add_text"], [7, 3, 1, "", "write_config"]], "ablator.modules.metrics": [[8, 0, 0, "-", "main"], [8, 0, 0, "-", "stores"]], "ablator.modules.metrics.main": [[8, 6, 1, "", "LossDivergedError"], [8, 1, 1, "", "TrainMetrics"]], "ablator.modules.metrics.main.TrainMetrics": [[8, 3, 1, "", "append_batch"], [8, 3, 1, "", "evaluate"], [8, 3, 1, "", "reset"], [8, 3, 1, "", "to_dict"], [8, 3, 1, "", "update_ma_metrics"], [8, 3, 1, "", "update_static_metrics"]], "ablator.modules.metrics.stores": [[8, 1, 1, "", "ArrayStore"], [8, 1, 1, "", "MovingAverage"], [8, 1, 1, "", "PredictionStore"]], "ablator.modules.metrics.stores.ArrayStore": [[8, 3, 1, "", "append"], [8, 3, 1, "", "get"], [8, 3, 1, "", "reset"]], "ablator.modules.metrics.stores.MovingAverage": [[8, 3, 1, "", "append"], [8, 2, 1, "", "value"]], "ablator.modules.metrics.stores.PredictionStore": [[8, 3, 1, "", "append"], [8, 3, 1, "", "evaluate"], [8, 3, 1, "", "reset"]], "ablator.modules.optimizer": [[6, 1, 1, "", "AdamConfig"], [6, 1, 1, "", "AdamWConfig"], [6, 1, 1, "", "OptimizerArgs"], [6, 1, 1, "", "OptimizerConfig"], [6, 1, 1, "", "SGDConfig"], [6, 5, 1, "", "get_optim_parameters"], [6, 5, 1, "", "get_parameter_names"]], "ablator.modules.optimizer.AdamConfig": [[6, 4, 1, "", "betas"], [6, 4, 1, "", "config_class"], [6, 3, 1, "", "init_optimizer"], [6, 4, 1, "", "weight_decay"]], "ablator.modules.optimizer.AdamWConfig": [[6, 4, 1, "", "betas"], [6, 4, 1, "", "config_class"], [6, 4, 1, "", "eps"], [6, 3, 1, "", "init_optimizer"], [6, 4, 1, "", "weight_decay"]], "ablator.modules.optimizer.OptimizerArgs": [[6, 4, 1, "", "config_class"], [6, 3, 1, "", "init_optimizer"], [6, 4, 1, "", "lr"]], "ablator.modules.optimizer.OptimizerConfig": [[6, 4, 1, "", "arguments"], [6, 4, 1, "", "config_class"], [6, 3, 1, "", "make_optimizer"], [6, 4, 1, "", "name"]], "ablator.modules.optimizer.SGDConfig": [[6, 4, 1, "", "config_class"], [6, 3, 1, "", "init_optimizer"], [6, 4, 1, "", "momentum"], [6, 4, 1, "", "weight_decay"]], "ablator.modules.scheduler": [[6, 1, 1, "", "OneCycleConfig"], [6, 1, 1, "", "PlateuaConfig"], [6, 1, 1, "", "SchedulerArgs"], [6, 1, 1, "", "SchedulerConfig"], [6, 1, 1, "", "StepLRConfig"]], "ablator.modules.scheduler.OneCycleConfig": [[6, 4, 1, "", "config_class"], [6, 3, 1, "", "init_scheduler"], [6, 4, 1, "", "max_lr"], [6, 4, 1, "", "step_when"], [6, 4, 1, "", "total_steps"]], "ablator.modules.scheduler.PlateuaConfig": [[6, 4, 1, "", "config_class"], [6, 4, 1, "", "factor"], [6, 3, 1, "", "init_scheduler"], [6, 4, 1, "", "min_lr"], [6, 4, 1, "", "mode"], [6, 4, 1, "", "patience"], [6, 4, 1, "", "step_when"], [6, 4, 1, "", "threshold"], [6, 4, 1, "", "verbose"]], "ablator.modules.scheduler.SchedulerArgs": [[6, 4, 1, "", "config_class"], [6, 3, 1, "", "init_scheduler"], [6, 4, 1, "", "step_when"]], "ablator.modules.scheduler.SchedulerConfig": [[6, 4, 1, "", "arguments"], [6, 4, 1, "", "config_class"], [6, 3, 1, "", "make_scheduler"], [6, 4, 1, "", "name"]], "ablator.modules.scheduler.StepLRConfig": [[6, 4, 1, "", "config_class"], [6, 4, 1, "", "gamma"], [6, 3, 1, "", "init_scheduler"], [6, 4, 1, "", "step_size"], [6, 4, 1, "", "step_when"]], "ablator.modules.storage": [[9, 0, 0, "-", "cloud"], [9, 0, 0, "-", "remote"]], "ablator.modules.storage.cloud": [[9, 1, 1, "", "GcpConfig"]], "ablator.modules.storage.cloud.GcpConfig": [[9, 4, 1, "", "bucket"], [9, 4, 1, "", "config_class"], [9, 4, 1, "", "exclude_chkpts"], [9, 4, 1, "", "exclude_glob"], [9, 3, 1, "", "list_bucket"], [9, 3, 1, "", "rsync_down"], [9, 3, 1, "", "rsync_down_nodes"], [9, 3, 1, "", "rsync_up"]], "ablator.modules.storage.remote": [[9, 1, 1, "", "RemoteConfig"], [9, 5, 1, "", "run_cmd_wait"]], "ablator.modules.storage.remote.RemoteConfig": [[9, 4, 1, "", "config_class"], [9, 4, 1, "", "exclude_chkpts"], [9, 4, 1, "", "exclude_glob"], [9, 4, 1, "", "hostname"], [9, 4, 1, "", "port"], [9, 4, 1, "", "remote_path"], [9, 3, 1, "", "rsync_down"], [9, 3, 1, "", "rsync_up"], [9, 4, 1, "", "username"]], "ablator.utils": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "file"]], "ablator.utils.base": [[10, 1, 1, "", "Dummy"], [10, 5, 1, "", "apply_lambda_to_iter"], [10, 5, 1, "", "debugger_is_active"], [10, 5, 1, "", "get_gpu_max_mem"], [10, 5, 1, "", "get_gpu_mem"], [10, 5, 1, "", "get_latest_chkpts"], [10, 5, 1, "", "get_lr"], [10, 5, 1, "", "init_weights"], [10, 5, 1, "", "iter_to_device"], [10, 5, 1, "", "iter_to_numpy"], [10, 5, 1, "", "parse_device"], [10, 5, 1, "", "set_seed"]], "ablator.utils.file": [[10, 5, 1, "", "clean_checkpoints"], [10, 5, 1, "", "default_val_parser"], [10, 5, 1, "", "dict_to_json"], [10, 5, 1, "", "json_to_dict"], [10, 5, 1, "", "make_sub_dirs"], [10, 5, 1, "", "nested_set"], [10, 5, 1, "", "save_checkpoint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"ablat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "subpackag": [0, 1, 4, 6], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "analysi": [1, 2], "submodul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "main": [1, 2, 3, 4, 5, 7, 8], "result": 1, "plot": 2, "cat_plot": 2, "num_plot": 2, "util": [2, 3, 10], "config": [3, 4], "type": 3, "mp": 4, "proto": 4, "state": 4, "model": 5, "wrapper": 5, "optim": 6, "schedul": 6, "logger": 7, "file": [7, 10], "tensor": 7, "metric": 8, "store": 8, "storag": 9, "cloud": 9, "remot": 9, "base": 10, "welcom": 11, "": 11, "document": 11, "indic": 11, "tabl": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ablator package": [[0, "ablator-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [6, "subpackages"]], "Module contents": [[0, "module-ablator"], [1, "module-ablator.analysis"], [2, "module-ablator.analysis.plot"], [3, "module-ablator.config"], [4, "module-ablator.main"], [5, "module-ablator.main.model"], [6, "module-ablator.modules"], [7, "module-ablator.modules.loggers"], [8, "module-ablator.modules.metrics"], [9, "module-ablator.modules.storage"], [10, "module-ablator.utils"]], "ablator.analysis package": [[1, "ablator-analysis-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "ablator.analysis.main module": [[1, "module-ablator.analysis.main"]], "ablator.analysis.results module": [[1, "module-ablator.analysis.results"]], "ablator.analysis.plot package": [[2, "ablator-analysis-plot-package"]], "ablator.analysis.plot.cat_plot module": [[2, "module-ablator.analysis.plot.cat_plot"]], "ablator.analysis.plot.main module": [[2, "module-ablator.analysis.plot.main"]], "ablator.analysis.plot.num_plot module": [[2, "module-ablator.analysis.plot.num_plot"]], "ablator.analysis.plot.utils module": [[2, "module-ablator.analysis.plot.utils"]], "ablator.config package": [[3, "ablator-config-package"]], "ablator.config.main module": [[3, "module-ablator.config.main"]], "ablator.config.types module": [[3, "module-ablator.config.types"]], "ablator.config.utils module": [[3, "module-ablator.config.utils"]], "ablator.main package": [[4, "ablator-main-package"]], "ablator.main.configs module": [[4, "module-ablator.main.configs"]], "ablator.main.mp module": [[4, "module-ablator.main.mp"]], "ablator.main.proto module": [[4, "module-ablator.main.proto"]], "ablator.main.state module": [[4, "module-ablator.main.state"]], "ablator.main.model package": [[5, "ablator-main-model-package"]], "ablator.main.model.main module": [[5, "module-ablator.main.model.main"]], "ablator.main.model.wrapper module": [[5, "module-ablator.main.model.wrapper"]], "ablator.modules package": [[6, "ablator-modules-package"]], "ablator.modules.optimizer module": [[6, "module-ablator.modules.optimizer"]], "ablator.modules.scheduler module": [[6, "module-ablator.modules.scheduler"]], "ablator.modules.loggers package": [[7, "ablator-modules-loggers-package"]], "ablator.modules.loggers.file module": [[7, "module-ablator.modules.loggers.file"]], "ablator.modules.loggers.main module": [[7, "module-ablator.modules.loggers.main"]], "ablator.modules.loggers.tensor module": [[7, "module-ablator.modules.loggers.tensor"]], "ablator.modules.metrics package": [[8, "ablator-modules-metrics-package"]], "ablator.modules.metrics.main module": [[8, "module-ablator.modules.metrics.main"]], "ablator.modules.metrics.stores module": [[8, "module-ablator.modules.metrics.stores"]], "ablator.modules.storage package": [[9, "ablator-modules-storage-package"]], "ablator.modules.storage.cloud module": [[9, "module-ablator.modules.storage.cloud"]], "ablator.modules.storage.remote module": [[9, "module-ablator.modules.storage.remote"]], "ablator.utils package": [[10, "ablator-utils-package"]], "ablator.utils.base module": [[10, "module-ablator.utils.base"]], "ablator.utils.file module": [[10, "module-ablator.utils.file"]], "Welcome to ablator\u2019s documentation!": [[11, "welcome-to-ablator-s-documentation"]], "Contents:": [[11, null]], "Indices and tables": [[11, "indices-and-tables"]], "ablator": [[12, "ablator"]]}, "indexentries": {"ablator": [[0, "module-ablator"]], "module": [[0, "module-ablator"], [1, "module-ablator.analysis"], [1, "module-ablator.analysis.main"], [1, "module-ablator.analysis.results"], [2, "module-ablator.analysis.plot"], [2, "module-ablator.analysis.plot.cat_plot"], [2, "module-ablator.analysis.plot.main"], [2, "module-ablator.analysis.plot.num_plot"], [2, "module-ablator.analysis.plot.utils"], [3, "module-ablator.config"], [3, "module-ablator.config.main"], [3, "module-ablator.config.types"], [3, "module-ablator.config.utils"], [4, "module-ablator.main"], [4, "module-ablator.main.configs"], [4, "module-ablator.main.mp"], [4, "module-ablator.main.proto"], [4, "module-ablator.main.state"], [5, "module-ablator.main.model"], [5, "module-ablator.main.model.main"], [5, "module-ablator.main.model.wrapper"], [6, "module-ablator.modules"], [6, "module-ablator.modules.optimizer"], [6, "module-ablator.modules.scheduler"], [7, "module-ablator.modules.loggers"], [7, "module-ablator.modules.loggers.file"], [7, "module-ablator.modules.loggers.main"], [7, "module-ablator.modules.loggers.tensor"], [8, "module-ablator.modules.metrics"], [8, "module-ablator.modules.metrics.main"], [8, "module-ablator.modules.metrics.stores"], [9, "module-ablator.modules.storage"], [9, "module-ablator.modules.storage.cloud"], [9, "module-ablator.modules.storage.remote"], [10, "module-ablator.utils"], [10, "module-ablator.utils.base"], [10, "module-ablator.utils.file"]], "analysis (class in ablator.analysis.main)": [[1, "ablator.analysis.main.Analysis"]], "results (class in ablator.analysis.results)": [[1, "ablator.analysis.results.Results"]], "ablator.analysis": [[1, "module-ablator.analysis"]], "ablator.analysis.main": [[1, "module-ablator.analysis.main"]], "ablator.analysis.results": [[1, "module-ablator.analysis.results"]], "metric_names (ablator.analysis.main.analysis property)": [[1, "ablator.analysis.main.Analysis.metric_names"]], "metric_names (ablator.analysis.results.results property)": [[1, "ablator.analysis.results.Results.metric_names"]], "process_row() (in module ablator.analysis.results)": [[1, "ablator.analysis.results.process_row"]], "read_result() (in module ablator.analysis.results)": [[1, "ablator.analysis.results.read_result"]], "read_results() (ablator.analysis.results.results class method)": [[1, "ablator.analysis.results.Results.read_results"]], "categorical (class in ablator.analysis.plot.cat_plot)": [[2, "ablator.analysis.plot.cat_plot.Categorical"]], "data_type (ablator.analysis.plot.cat_plot.categorical attribute)": [[2, "ablator.analysis.plot.cat_plot.Categorical.DATA_TYPE"]], "data_type (ablator.analysis.plot.num_plot.numerical attribute)": [[2, "ablator.analysis.plot.num_plot.Numerical.DATA_TYPE"]], "linearplot (class in ablator.analysis.plot.num_plot)": [[2, "ablator.analysis.plot.num_plot.LinearPlot"]], "numerical (class in ablator.analysis.plot.num_plot)": [[2, "ablator.analysis.plot.num_plot.Numerical"]], "plot (class in ablator.analysis.plot)": [[2, "ablator.analysis.plot.Plot"]], "plotanalysis (class in ablator.analysis.plot.main)": [[2, "ablator.analysis.plot.main.PlotAnalysis"]], "violinplot (class in ablator.analysis.plot.cat_plot)": [[2, "ablator.analysis.plot.cat_plot.ViolinPlot"]], "ablator.analysis.plot": [[2, "module-ablator.analysis.plot"]], "ablator.analysis.plot.cat_plot": [[2, "module-ablator.analysis.plot.cat_plot"]], "ablator.analysis.plot.main": [[2, "module-ablator.analysis.plot.main"]], "ablator.analysis.plot.num_plot": [[2, "module-ablator.analysis.plot.num_plot"]], "ablator.analysis.plot.utils": [[2, "module-ablator.analysis.plot.utils"]], "make() (ablator.analysis.plot.plot method)": [[2, "ablator.analysis.plot.Plot.make"]], "make_figures() (ablator.analysis.plot.main.plotanalysis method)": [[2, "ablator.analysis.plot.main.PlotAnalysis.make_figures"]], "make_linearplot() (ablator.analysis.plot.main.plotanalysis method)": [[2, "ablator.analysis.plot.main.PlotAnalysis.make_linearplot"]], "make_violinplot() (ablator.analysis.plot.main.plotanalysis method)": [[2, "ablator.analysis.plot.main.PlotAnalysis.make_violinplot"]], "parse_name_remap() (in module ablator.analysis.plot.utils)": [[2, "ablator.analysis.plot.utils.parse_name_remap"]], "annotation (class in ablator.config.types)": [[3, "ablator.config.types.Annotation"]], "configbase (class in ablator.config.main)": [[3, "ablator.config.main.ConfigBase"]], "derived (class in ablator.config.types)": [[3, "ablator.config.types.Derived"]], "dict (class in ablator.config.types)": [[3, "ablator.config.types.Dict"]], "enum (class in ablator.config.types)": [[3, "ablator.config.types.Enum"]], "list (class in ablator.config.types)": [[3, "ablator.config.types.List"]], "missing (class in ablator.config.main)": [[3, "ablator.config.main.Missing"]], "optional (class in ablator.config.types)": [[3, "ablator.config.types.Optional"]], "stateful (class in ablator.config.types)": [[3, "ablator.config.types.Stateful"]], "stateless (class in ablator.config.types)": [[3, "ablator.config.types.Stateless"]], "tuple (class in ablator.config.types)": [[3, "ablator.config.types.Tuple"]], "ablator.config": [[3, "module-ablator.config"]], "ablator.config.main": [[3, "module-ablator.config.main"]], "ablator.config.types": [[3, "module-ablator.config.types"]], "ablator.config.utils": [[3, "module-ablator.config.utils"]], "annotations (ablator.config.main.configbase property)": [[3, "ablator.config.main.ConfigBase.annotations"]], "assert_state() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.assert_state"]], "assert_unambigious() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.assert_unambigious"]], "collection (ablator.config.types.annotation attribute)": [[3, "ablator.config.types.Annotation.collection"]], "config_class (ablator.config.main.configbase attribute)": [[3, "ablator.config.main.ConfigBase.config_class"]], "configclass() (in module ablator.config.main)": [[3, "ablator.config.main.configclass"]], "dict_hash() (in module ablator.config.utils)": [[3, "ablator.config.utils.dict_hash"]], "diff() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.diff"]], "diff_str() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.diff_str"]], "flatten_nested_dict() (in module ablator.config.utils)": [[3, "ablator.config.utils.flatten_nested_dict"]], "get_annot_type_with_dot_path() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.get_annot_type_with_dot_path"]], "get_annotation_state() (in module ablator.config.types)": [[3, "ablator.config.types.get_annotation_state"]], "get_type_with_dot_path() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.get_type_with_dot_path"]], "get_val_with_dot_path() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.get_val_with_dot_path"]], "keys() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.keys"]], "load() (ablator.config.main.configbase class method)": [[3, "ablator.config.main.ConfigBase.load"]], "make_dict() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.make_dict"]], "merge() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.merge"]], "optional (ablator.config.types.annotation attribute)": [[3, "ablator.config.types.Annotation.optional"]], "parse_type_hint() (in module ablator.config.types)": [[3, "ablator.config.types.parse_type_hint"]], "parse_value() (in module ablator.config.types)": [[3, "ablator.config.types.parse_value"]], "state (ablator.config.types.annotation attribute)": [[3, "ablator.config.types.Annotation.state"]], "to_dict() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.to_dict"]], "to_dot_path() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.to_dot_path"]], "to_str() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.to_str"]], "to_yaml() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.to_yaml"]], "uid (ablator.config.main.configbase property)": [[3, "ablator.config.main.ConfigBase.uid"]], "variable_type (ablator.config.types.annotation attribute)": [[3, "ablator.config.types.Annotation.variable_type"]], "write() (ablator.config.main.configbase method)": [[3, "ablator.config.main.ConfigBase.write"]], "base (class in ablator.main.state)": [[4, "ablator.main.state.Base"]], "complete (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.COMPLETE"]], "experimentstate (class in ablator.main.state)": [[4, "ablator.main.state.ExperimentState"]], "fail (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.FAIL"]], "modelconfig (class in ablator.main.configs)": [[4, "ablator.main.configs.ModelConfig"]], "optim (class in ablator.main.configs)": [[4, "ablator.main.configs.Optim"]], "optunastate (class in ablator.main.state)": [[4, "ablator.main.state.OptunaState"]], "pruned (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.PRUNED"]], "pruned_duplicate (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.PRUNED_DUPLICATE"]], "pruned_invalid (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.PRUNED_INVALID"]], "pruned_poor_performance (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.PRUNED_POOR_PERFORMANCE"]], "parallelconfig (class in ablator.main.configs)": [[4, "ablator.main.configs.ParallelConfig"]], "paralleltrainer (class in ablator.main.mp)": [[4, "ablator.main.mp.ParallelTrainer"]], "prototrainer (class in ablator.main.proto)": [[4, "ablator.main.proto.ProtoTrainer"]], "recoverable_error (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.RECOVERABLE_ERROR"]], "running (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.RUNNING"]], "runconfig (class in ablator.main.configs)": [[4, "ablator.main.configs.RunConfig"]], "searchalgo (class in ablator.main.configs)": [[4, "ablator.main.configs.SearchAlgo"]], "searchspace (class in ablator.main.configs)": [[4, "ablator.main.configs.SearchSpace"]], "searchtype (class in ablator.main.configs)": [[4, "ablator.main.configs.SearchType"]], "trainconfig (class in ablator.main.configs)": [[4, "ablator.main.configs.TrainConfig"]], "trial (class in ablator.main.state)": [[4, "ablator.main.state.Trial"]], "trialstate (class in ablator.main.state)": [[4, "ablator.main.state.TrialState"]], "waiting (ablator.main.state.trialstate attribute)": [[4, "ablator.main.state.TrialState.WAITING"]], "ablator.main": [[4, "module-ablator.main"]], "ablator.main.configs": [[4, "module-ablator.main.configs"]], "ablator.main.mp": [[4, "module-ablator.main.mp"]], "ablator.main.proto": [[4, "module-ablator.main.proto"]], "ablator.main.state": [[4, "module-ablator.main.state"]], "all_trials (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.all_trials"]], "all_trials_uid (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.all_trials_uid"]], "amp (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.amp"]], "augment_trial_kwargs() (in module ablator.main.state)": [[4, "ablator.main.state.augment_trial_kwargs"]], "batch_size (ablator.main.configs.trainconfig attribute)": [[4, "ablator.main.configs.TrainConfig.batch_size"]], "categorical_values (ablator.main.configs.searchspace attribute)": [[4, "ablator.main.configs.SearchSpace.categorical_values"]], "complete_trials (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.complete_trials"]], "concurrent_trials (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.concurrent_trials"]], "config_class (ablator.main.configs.modelconfig attribute)": [[4, "ablator.main.configs.ModelConfig.config_class"]], "config_class (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.config_class"]], "config_class (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.config_class"]], "config_class (ablator.main.configs.searchspace attribute)": [[4, "ablator.main.configs.SearchSpace.config_class"]], "config_class (ablator.main.configs.trainconfig attribute)": [[4, "ablator.main.configs.TrainConfig.config_class"]], "config_param (ablator.main.state.trial attribute)": [[4, "ablator.main.state.Trial.config_param"]], "config_uid (ablator.main.state.trial attribute)": [[4, "ablator.main.state.Trial.config_uid"]], "cpus_per_experiment (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.cpus_per_experiment"]], "dataset (ablator.main.configs.trainconfig attribute)": [[4, "ablator.main.configs.TrainConfig.dataset"]], "device (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.device"]], "divergence_factor (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.divergence_factor"]], "early_stopping_iter (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.early_stopping_iter"]], "epochs (ablator.main.configs.trainconfig attribute)": [[4, "ablator.main.configs.TrainConfig.epochs"]], "eval_epoch (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.eval_epoch"]], "eval_subsample (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.eval_subsample"]], "evaluate() (ablator.main.mp.paralleltrainer method)": [[4, "ablator.main.mp.ParallelTrainer.evaluate"]], "evaluate() (ablator.main.proto.prototrainer method)": [[4, "ablator.main.proto.ProtoTrainer.evaluate"]], "experiment_dir (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.experiment_dir"]], "failed_trials (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.failed_trials"]], "gcp_config (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.gcp_config"]], "gpu_mb_per_experiment (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.gpu_mb_per_experiment"]], "id (ablator.main.state.trial attribute)": [[4, "ablator.main.state.Trial.id"]], "ignore_invalid_params (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.ignore_invalid_params"]], "init_chkpt (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.init_chkpt"]], "integer (ablator.main.configs.searchtype attribute)": [[4, "ablator.main.configs.SearchType.integer"]], "keep_n_checkpoints (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.keep_n_checkpoints"]], "kill_idle() (ablator.main.mp.paralleltrainer method)": [[4, "ablator.main.mp.ParallelTrainer.kill_idle"]], "launch() (ablator.main.mp.paralleltrainer method)": [[4, "ablator.main.mp.ParallelTrainer.launch"]], "launch() (ablator.main.proto.prototrainer method)": [[4, "ablator.main.proto.ProtoTrainer.launch"]], "log_epoch (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.log_epoch"]], "max (ablator.main.configs.optim attribute)": [[4, "ablator.main.configs.Optim.max"]], "metadata (ablator.main.state.base attribute)": [[4, "ablator.main.state.Base.metadata"]], "metrics (ablator.main.state.trial attribute)": [[4, "ablator.main.state.Trial.metrics"]], "metrics_mb_limit (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.metrics_mb_limit"]], "metrics_n_batches (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.metrics_n_batches"]], "min (ablator.main.configs.optim attribute)": [[4, "ablator.main.configs.Optim.min"]], "model_config (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.model_config"]], "n_trials_remaining (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.n_trials_remaining"]], "numerical (ablator.main.configs.searchtype attribute)": [[4, "ablator.main.configs.SearchType.numerical"]], "optim_metrics (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.optim_metrics"]], "optimizer_config (ablator.main.configs.trainconfig attribute)": [[4, "ablator.main.configs.TrainConfig.optimizer_config"]], "optuna_trial_num (ablator.main.state.trial attribute)": [[4, "ablator.main.state.Trial.optuna_trial_num"]], "parse_metrics() (in module ablator.main.mp)": [[4, "ablator.main.mp.parse_metrics"]], "parse_metrics() (in module ablator.main.state)": [[4, "ablator.main.state.parse_metrics"]], "parse_rsync_paths() (in module ablator.main.mp)": [[4, "ablator.main.mp.parse_rsync_paths"]], "pending_trials (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.pending_trials"]], "pre_train_setup() (ablator.main.proto.prototrainer method)": [[4, "ablator.main.proto.ProtoTrainer.pre_train_setup"]], "pruned_duplicate_trials (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.pruned_duplicate_trials"]], "pruned_errored_trials (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.pruned_errored_trials"]], "rand_weights_init (ablator.main.configs.trainconfig attribute)": [[4, "ablator.main.configs.TrainConfig.rand_weights_init"]], "random (ablator.main.configs.searchalgo attribute)": [[4, "ablator.main.configs.SearchAlgo.random"]], "random_seed (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.random_seed"]], "registry (ablator.main.state.base attribute)": [[4, "ablator.main.state.Base.registry"]], "remote_config (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.remote_config"]], "running_trials (ablator.main.state.experimentstate property)": [[4, "ablator.main.state.ExperimentState.running_trials"]], "runtime_errors (ablator.main.state.trial attribute)": [[4, "ablator.main.state.Trial.runtime_errors"]], "sample_trial() (ablator.main.state.optunastate method)": [[4, "ablator.main.state.OptunaState.sample_trial"]], "sample_trial_params() (in module ablator.main.state)": [[4, "ablator.main.state.sample_trial_params"]], "sample_trials() (ablator.main.state.experimentstate method)": [[4, "ablator.main.state.ExperimentState.sample_trials"]], "scheduler_config (ablator.main.configs.trainconfig attribute)": [[4, "ablator.main.configs.TrainConfig.scheduler_config"]], "search_algo (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.search_algo"]], "search_space (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.search_space"]], "search_space_dot_path() (ablator.main.state.experimentstate static method)": [[4, "ablator.main.state.ExperimentState.search_space_dot_path"]], "smoke_test() (ablator.main.proto.prototrainer method)": [[4, "ablator.main.proto.ProtoTrainer.smoke_test"]], "state (ablator.main.state.trial attribute)": [[4, "ablator.main.state.Trial.state"]], "sync() (ablator.main.proto.prototrainer method)": [[4, "ablator.main.proto.ProtoTrainer.sync"]], "sync_down() (ablator.main.mp.paralleltrainer method)": [[4, "ablator.main.mp.ParallelTrainer.sync_down"]], "sync_up() (ablator.main.mp.paralleltrainer method)": [[4, "ablator.main.mp.ParallelTrainer.sync_up"]], "tensorboard (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.tensorboard"]], "to_optuna_state() (ablator.main.state.trialstate method)": [[4, "ablator.main.state.TrialState.to_optuna_state"]], "total_trials (ablator.main.configs.parallelconfig attribute)": [[4, "ablator.main.configs.ParallelConfig.total_trials"]], "tpe (ablator.main.configs.searchalgo attribute)": [[4, "ablator.main.configs.SearchAlgo.tpe"]], "train_config (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.train_config"]], "train_main_remote() (in module ablator.main.mp)": [[4, "ablator.main.mp.train_main_remote"]], "tune_trial_str() (ablator.main.state.experimentstate static method)": [[4, "ablator.main.state.ExperimentState.tune_trial_str"]], "uid (ablator.main.configs.runconfig property)": [[4, "ablator.main.configs.RunConfig.uid"]], "update_trial() (ablator.main.state.optunastate method)": [[4, "ablator.main.state.OptunaState.update_trial"]], "update_trial_state() (ablator.main.state.experimentstate method)": [[4, "ablator.main.state.ExperimentState.update_trial_state"]], "value_range (ablator.main.configs.searchspace attribute)": [[4, "ablator.main.configs.SearchSpace.value_range"]], "value_type (ablator.main.configs.searchspace attribute)": [[4, "ablator.main.configs.SearchSpace.value_type"]], "verbose (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.verbose"]], "warm_up_epochs (ablator.main.configs.runconfig attribute)": [[4, "ablator.main.configs.RunConfig.warm_up_epochs"]], "evaluationerror": [[5, "ablator.main.model.main.EvaluationError"]], "logsteperror": [[5, "ablator.main.model.main.LogStepError"]], "modelbase (class in ablator.main.model.main)": [[5, "ablator.main.model.main.ModelBase"]], "modelwrapper (class in ablator.main.model.wrapper)": [[5, "ablator.main.model.wrapper.ModelWrapper"]], "trainplateauerror": [[5, "ablator.main.model.main.TrainPlateauError"]], "ablator.main.model": [[5, "module-ablator.main.model"]], "ablator.main.model.main": [[5, "module-ablator.main.model.main"]], "ablator.main.model.wrapper": [[5, "module-ablator.main.model.wrapper"]], "apply_loss() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.apply_loss"]], "aux_metrics() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.aux_metrics"]], "checkpoint() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.checkpoint"]], "checkpoint() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.checkpoint"]], "config_parser() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.config_parser"]], "config_parser() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.config_parser"]], "create_model() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.create_model"]], "create_model() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.create_model"]], "create_optimizer() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.create_optimizer"]], "create_scaler() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.create_scaler"]], "create_scheduler() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.create_scheduler"]], "current_epoch (ablator.main.model.main.modelbase property)": [[5, "ablator.main.model.main.ModelBase.current_epoch"]], "custom_evaluation() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.custom_evaluation"]], "epoch_len (ablator.main.model.main.modelbase property)": [[5, "ablator.main.model.main.ModelBase.epoch_len"]], "eval() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.eval"]], "eval_itr (ablator.main.model.main.modelbase property)": [[5, "ablator.main.model.main.ModelBase.eval_itr"]], "evaluate() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.evaluate"]], "evaluate() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.evaluate"]], "evaluation_functions() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.evaluation_functions"]], "evaluation_functions() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.evaluation_functions"]], "load_checkpoint() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.load_checkpoint"]], "load_checkpoint() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.load_checkpoint"]], "log() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.log"]], "log_itr (ablator.main.model.main.modelbase property)": [[5, "ablator.main.model.main.ModelBase.log_itr"]], "log_step() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.log_step"]], "make_dataloader_test() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.make_dataloader_test"]], "make_dataloader_train() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.make_dataloader_train"]], "make_dataloader_val() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.make_dataloader_val"]], "make_dataloaders() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.make_dataloaders"]], "make_dataloaders() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.make_dataloaders"]], "mock_train() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.mock_train"]], "model_config (ablator.main.model.wrapper.modelwrapper property)": [[5, "ablator.main.model.wrapper.ModelWrapper.model_config"]], "model_step() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.model_step"]], "reset_optimizer_scheduler() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.reset_optimizer_scheduler"]], "save_dict() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.save_dict"]], "save_dict() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.save_dict"]], "status_message() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.status_message"]], "to_device() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.to_device"]], "total_steps (ablator.main.model.wrapper.modelwrapper property)": [[5, "ablator.main.model.wrapper.ModelWrapper.total_steps"]], "train() (ablator.main.model.main.modelbase method)": [[5, "ablator.main.model.main.ModelBase.train"]], "train() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.train"]], "train_config (ablator.main.model.wrapper.modelwrapper property)": [[5, "ablator.main.model.wrapper.ModelWrapper.train_config"]], "train_loop() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.train_loop"]], "train_stats (ablator.main.model.main.modelbase property)": [[5, "ablator.main.model.main.ModelBase.train_stats"]], "train_step() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.train_step"]], "uid (ablator.main.model.main.modelbase property)": [[5, "ablator.main.model.main.ModelBase.uid"]], "update_status() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.update_status"]], "validation_loop() (ablator.main.model.wrapper.modelwrapper method)": [[5, "ablator.main.model.wrapper.ModelWrapper.validation_loop"]], "adamconfig (class in ablator.modules.optimizer)": [[6, "ablator.modules.optimizer.AdamConfig"]], "adamwconfig (class in ablator.modules.optimizer)": [[6, "ablator.modules.optimizer.AdamWConfig"]], "onecycleconfig (class in ablator.modules.scheduler)": [[6, "ablator.modules.scheduler.OneCycleConfig"]], "optimizerargs (class in ablator.modules.optimizer)": [[6, "ablator.modules.optimizer.OptimizerArgs"]], "optimizerconfig (class in ablator.modules.optimizer)": [[6, "ablator.modules.optimizer.OptimizerConfig"]], "plateuaconfig (class in ablator.modules.scheduler)": [[6, "ablator.modules.scheduler.PlateuaConfig"]], "sgdconfig (class in ablator.modules.optimizer)": [[6, "ablator.modules.optimizer.SGDConfig"]], "schedulerargs (class in ablator.modules.scheduler)": [[6, "ablator.modules.scheduler.SchedulerArgs"]], "schedulerconfig (class in ablator.modules.scheduler)": [[6, "ablator.modules.scheduler.SchedulerConfig"]], "steplrconfig (class in ablator.modules.scheduler)": [[6, "ablator.modules.scheduler.StepLRConfig"]], "ablator.modules": [[6, "module-ablator.modules"]], "ablator.modules.optimizer": [[6, "module-ablator.modules.optimizer"]], "ablator.modules.scheduler": [[6, "module-ablator.modules.scheduler"]], "arguments (ablator.modules.optimizer.optimizerconfig attribute)": [[6, "ablator.modules.optimizer.OptimizerConfig.arguments"]], "arguments (ablator.modules.scheduler.schedulerconfig attribute)": [[6, "ablator.modules.scheduler.SchedulerConfig.arguments"]], "betas (ablator.modules.optimizer.adamconfig attribute)": [[6, "ablator.modules.optimizer.AdamConfig.betas"]], "betas (ablator.modules.optimizer.adamwconfig attribute)": [[6, "ablator.modules.optimizer.AdamWConfig.betas"]], "config_class (ablator.modules.optimizer.adamconfig attribute)": [[6, "ablator.modules.optimizer.AdamConfig.config_class"]], "config_class (ablator.modules.optimizer.adamwconfig attribute)": [[6, "ablator.modules.optimizer.AdamWConfig.config_class"]], "config_class (ablator.modules.optimizer.optimizerargs attribute)": [[6, "ablator.modules.optimizer.OptimizerArgs.config_class"]], "config_class (ablator.modules.optimizer.optimizerconfig attribute)": [[6, "ablator.modules.optimizer.OptimizerConfig.config_class"]], "config_class (ablator.modules.optimizer.sgdconfig attribute)": [[6, "ablator.modules.optimizer.SGDConfig.config_class"]], "config_class (ablator.modules.scheduler.onecycleconfig attribute)": [[6, "ablator.modules.scheduler.OneCycleConfig.config_class"]], "config_class (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.config_class"]], "config_class (ablator.modules.scheduler.schedulerargs attribute)": [[6, "ablator.modules.scheduler.SchedulerArgs.config_class"]], "config_class (ablator.modules.scheduler.schedulerconfig attribute)": [[6, "ablator.modules.scheduler.SchedulerConfig.config_class"]], "config_class (ablator.modules.scheduler.steplrconfig attribute)": [[6, "ablator.modules.scheduler.StepLRConfig.config_class"]], "eps (ablator.modules.optimizer.adamwconfig attribute)": [[6, "ablator.modules.optimizer.AdamWConfig.eps"]], "factor (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.factor"]], "gamma (ablator.modules.scheduler.steplrconfig attribute)": [[6, "ablator.modules.scheduler.StepLRConfig.gamma"]], "get_optim_parameters() (in module ablator.modules.optimizer)": [[6, "ablator.modules.optimizer.get_optim_parameters"]], "get_parameter_names() (in module ablator.modules.optimizer)": [[6, "ablator.modules.optimizer.get_parameter_names"]], "init_optimizer() (ablator.modules.optimizer.adamconfig method)": [[6, "ablator.modules.optimizer.AdamConfig.init_optimizer"]], "init_optimizer() (ablator.modules.optimizer.adamwconfig method)": [[6, "ablator.modules.optimizer.AdamWConfig.init_optimizer"]], "init_optimizer() (ablator.modules.optimizer.optimizerargs method)": [[6, "ablator.modules.optimizer.OptimizerArgs.init_optimizer"]], "init_optimizer() (ablator.modules.optimizer.sgdconfig method)": [[6, "ablator.modules.optimizer.SGDConfig.init_optimizer"]], "init_scheduler() (ablator.modules.scheduler.onecycleconfig method)": [[6, "ablator.modules.scheduler.OneCycleConfig.init_scheduler"]], "init_scheduler() (ablator.modules.scheduler.plateuaconfig method)": [[6, "ablator.modules.scheduler.PlateuaConfig.init_scheduler"]], "init_scheduler() (ablator.modules.scheduler.schedulerargs method)": [[6, "ablator.modules.scheduler.SchedulerArgs.init_scheduler"]], "init_scheduler() (ablator.modules.scheduler.steplrconfig method)": [[6, "ablator.modules.scheduler.StepLRConfig.init_scheduler"]], "lr (ablator.modules.optimizer.optimizerargs attribute)": [[6, "ablator.modules.optimizer.OptimizerArgs.lr"]], "make_optimizer() (ablator.modules.optimizer.optimizerconfig method)": [[6, "ablator.modules.optimizer.OptimizerConfig.make_optimizer"]], "make_scheduler() (ablator.modules.scheduler.schedulerconfig method)": [[6, "ablator.modules.scheduler.SchedulerConfig.make_scheduler"]], "max_lr (ablator.modules.scheduler.onecycleconfig attribute)": [[6, "ablator.modules.scheduler.OneCycleConfig.max_lr"]], "min_lr (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.min_lr"]], "mode (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.mode"]], "momentum (ablator.modules.optimizer.sgdconfig attribute)": [[6, "ablator.modules.optimizer.SGDConfig.momentum"]], "name (ablator.modules.optimizer.optimizerconfig attribute)": [[6, "ablator.modules.optimizer.OptimizerConfig.name"]], "name (ablator.modules.scheduler.schedulerconfig attribute)": [[6, "ablator.modules.scheduler.SchedulerConfig.name"]], "patience (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.patience"]], "step_size (ablator.modules.scheduler.steplrconfig attribute)": [[6, "ablator.modules.scheduler.StepLRConfig.step_size"]], "step_when (ablator.modules.scheduler.onecycleconfig attribute)": [[6, "ablator.modules.scheduler.OneCycleConfig.step_when"]], "step_when (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.step_when"]], "step_when (ablator.modules.scheduler.schedulerargs attribute)": [[6, "ablator.modules.scheduler.SchedulerArgs.step_when"]], "step_when (ablator.modules.scheduler.steplrconfig attribute)": [[6, "ablator.modules.scheduler.StepLRConfig.step_when"]], "threshold (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.threshold"]], "total_steps (ablator.modules.scheduler.onecycleconfig attribute)": [[6, "ablator.modules.scheduler.OneCycleConfig.total_steps"]], "verbose (ablator.modules.scheduler.plateuaconfig attribute)": [[6, "ablator.modules.scheduler.PlateuaConfig.verbose"]], "weight_decay (ablator.modules.optimizer.adamconfig attribute)": [[6, "ablator.modules.optimizer.AdamConfig.weight_decay"]], "weight_decay (ablator.modules.optimizer.adamwconfig attribute)": [[6, "ablator.modules.optimizer.AdamWConfig.weight_decay"]], "weight_decay (ablator.modules.optimizer.sgdconfig attribute)": [[6, "ablator.modules.optimizer.SGDConfig.weight_decay"]], "chkpt_dirs (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.CHKPT_DIRS"]], "chkpt_dir_names (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.CHKPT_DIR_NAMES"]], "chkpt_dir_values (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.CHKPT_DIR_VALUES"]], "config_file_name (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.CONFIG_FILE_NAME"]], "duplicaterunerror": [[7, "ablator.modules.loggers.main.DuplicateRunError"]], "endc (ablator.modules.loggers.file.filelogger attribute)": [[7, "ablator.modules.loggers.file.FileLogger.ENDC"]], "fail (ablator.modules.loggers.file.filelogger attribute)": [[7, "ablator.modules.loggers.file.FileLogger.FAIL"]], "filelogger (class in ablator.modules.loggers.file)": [[7, "ablator.modules.loggers.file.FileLogger"]], "log_file_name (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.LOG_FILE_NAME"]], "loggerbase (class in ablator.modules.loggers)": [[7, "ablator.modules.loggers.LoggerBase"]], "loggerconfig (class in ablator.modules.loggers)": [[7, "ablator.modules.loggers.LoggerConfig"]], "metadata_json (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.METADATA_JSON"]], "results_json_name (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.RESULTS_JSON_NAME"]], "summary_dir_name (ablator.modules.loggers.main.summarylogger attribute)": [[7, "ablator.modules.loggers.main.SummaryLogger.SUMMARY_DIR_NAME"]], "summarylogger (class in ablator.modules.loggers.main)": [[7, "ablator.modules.loggers.main.SummaryLogger"]], "tensorboardlogger (class in ablator.modules.loggers.tensor)": [[7, "ablator.modules.loggers.tensor.TensorboardLogger"]], "warning (ablator.modules.loggers.file.filelogger attribute)": [[7, "ablator.modules.loggers.file.FileLogger.WARNING"]], "ablator.modules.loggers": [[7, "module-ablator.modules.loggers"]], "ablator.modules.loggers.file": [[7, "module-ablator.modules.loggers.file"]], "ablator.modules.loggers.main": [[7, "module-ablator.modules.loggers.main"]], "ablator.modules.loggers.tensor": [[7, "module-ablator.modules.loggers.tensor"]], "add_image() (ablator.modules.loggers.loggerbase method)": [[7, "ablator.modules.loggers.LoggerBase.add_image"]], "add_image() (ablator.modules.loggers.tensor.tensorboardlogger method)": [[7, "ablator.modules.loggers.tensor.TensorboardLogger.add_image"]], "add_scalar() (ablator.modules.loggers.loggerbase method)": [[7, "ablator.modules.loggers.LoggerBase.add_scalar"]], "add_scalar() (ablator.modules.loggers.tensor.tensorboardlogger method)": [[7, "ablator.modules.loggers.tensor.TensorboardLogger.add_scalar"]], "add_scalars() (ablator.modules.loggers.loggerbase method)": [[7, "ablator.modules.loggers.LoggerBase.add_scalars"]], "add_scalars() (ablator.modules.loggers.tensor.tensorboardlogger method)": [[7, "ablator.modules.loggers.tensor.TensorboardLogger.add_scalars"]], "add_table() (ablator.modules.loggers.loggerbase method)": [[7, "ablator.modules.loggers.LoggerBase.add_table"]], "add_table() (ablator.modules.loggers.tensor.tensorboardlogger method)": [[7, "ablator.modules.loggers.tensor.TensorboardLogger.add_table"]], "add_text() (ablator.modules.loggers.loggerbase method)": [[7, "ablator.modules.loggers.LoggerBase.add_text"]], "add_text() (ablator.modules.loggers.tensor.tensorboardlogger method)": [[7, "ablator.modules.loggers.tensor.TensorboardLogger.add_text"]], "checkpoint() (ablator.modules.loggers.main.summarylogger method)": [[7, "ablator.modules.loggers.main.SummaryLogger.checkpoint"]], "clean_checkpoints() (ablator.modules.loggers.main.summarylogger method)": [[7, "ablator.modules.loggers.main.SummaryLogger.clean_checkpoints"]], "config_class (ablator.modules.loggers.loggerconfig attribute)": [[7, "ablator.modules.loggers.LoggerConfig.config_class"]], "error() (ablator.modules.loggers.file.filelogger method)": [[7, "ablator.modules.loggers.file.FileLogger.error"]], "error() (ablator.modules.loggers.main.summarylogger method)": [[7, "ablator.modules.loggers.main.SummaryLogger.error"]], "info() (ablator.modules.loggers.file.filelogger method)": [[7, "ablator.modules.loggers.file.FileLogger.info"]], "info() (ablator.modules.loggers.main.summarylogger method)": [[7, "ablator.modules.loggers.main.SummaryLogger.info"]], "make_logger() (ablator.modules.loggers.loggerconfig method)": [[7, "ablator.modules.loggers.LoggerConfig.make_logger"]], "set_path() (ablator.modules.loggers.file.filelogger method)": [[7, "ablator.modules.loggers.file.FileLogger.set_path"]], "set_prefix() (ablator.modules.loggers.file.filelogger method)": [[7, "ablator.modules.loggers.file.FileLogger.set_prefix"]], "update() (ablator.modules.loggers.main.summarylogger method)": [[7, "ablator.modules.loggers.main.SummaryLogger.update"]], "warn() (ablator.modules.loggers.file.filelogger method)": [[7, "ablator.modules.loggers.file.FileLogger.warn"]], "warn() (ablator.modules.loggers.main.summarylogger method)": [[7, "ablator.modules.loggers.main.SummaryLogger.warn"]], "write_config() (ablator.modules.loggers.loggerbase method)": [[7, "ablator.modules.loggers.LoggerBase.write_config"]], "write_config() (ablator.modules.loggers.tensor.tensorboardlogger method)": [[7, "ablator.modules.loggers.tensor.TensorboardLogger.write_config"]], "arraystore (class in ablator.modules.metrics.stores)": [[8, "ablator.modules.metrics.stores.ArrayStore"]], "lossdivergederror": [[8, "ablator.modules.metrics.main.LossDivergedError"]], "movingaverage (class in ablator.modules.metrics.stores)": [[8, "ablator.modules.metrics.stores.MovingAverage"]], "predictionstore (class in ablator.modules.metrics.stores)": [[8, "ablator.modules.metrics.stores.PredictionStore"]], "trainmetrics (class in ablator.modules.metrics.main)": [[8, "ablator.modules.metrics.main.TrainMetrics"]], "ablator.modules.metrics": [[8, "module-ablator.modules.metrics"]], "ablator.modules.metrics.main": [[8, "module-ablator.modules.metrics.main"]], "ablator.modules.metrics.stores": [[8, "module-ablator.modules.metrics.stores"]], "append() (ablator.modules.metrics.stores.arraystore method)": [[8, "ablator.modules.metrics.stores.ArrayStore.append"]], "append() (ablator.modules.metrics.stores.movingaverage method)": [[8, "ablator.modules.metrics.stores.MovingAverage.append"]], "append() (ablator.modules.metrics.stores.predictionstore method)": [[8, "ablator.modules.metrics.stores.PredictionStore.append"]], "append_batch() (ablator.modules.metrics.main.trainmetrics method)": [[8, "ablator.modules.metrics.main.TrainMetrics.append_batch"]], "evaluate() (ablator.modules.metrics.main.trainmetrics method)": [[8, "ablator.modules.metrics.main.TrainMetrics.evaluate"]], "evaluate() (ablator.modules.metrics.stores.predictionstore method)": [[8, "ablator.modules.metrics.stores.PredictionStore.evaluate"]], "get() (ablator.modules.metrics.stores.arraystore method)": [[8, "ablator.modules.metrics.stores.ArrayStore.get"]], "reset() (ablator.modules.metrics.main.trainmetrics method)": [[8, "ablator.modules.metrics.main.TrainMetrics.reset"]], "reset() (ablator.modules.metrics.stores.arraystore method)": [[8, "ablator.modules.metrics.stores.ArrayStore.reset"]], "reset() (ablator.modules.metrics.stores.predictionstore method)": [[8, "ablator.modules.metrics.stores.PredictionStore.reset"]], "to_dict() (ablator.modules.metrics.main.trainmetrics method)": [[8, "ablator.modules.metrics.main.TrainMetrics.to_dict"]], "update_ma_metrics() (ablator.modules.metrics.main.trainmetrics method)": [[8, "ablator.modules.metrics.main.TrainMetrics.update_ma_metrics"]], "update_static_metrics() (ablator.modules.metrics.main.trainmetrics method)": [[8, "ablator.modules.metrics.main.TrainMetrics.update_static_metrics"]], "value (ablator.modules.metrics.stores.movingaverage property)": [[8, "ablator.modules.metrics.stores.MovingAverage.value"]], "gcpconfig (class in ablator.modules.storage.cloud)": [[9, "ablator.modules.storage.cloud.GcpConfig"]], "remoteconfig (class in ablator.modules.storage.remote)": [[9, "ablator.modules.storage.remote.RemoteConfig"]], "ablator.modules.storage": [[9, "module-ablator.modules.storage"]], "ablator.modules.storage.cloud": [[9, "module-ablator.modules.storage.cloud"]], "ablator.modules.storage.remote": [[9, "module-ablator.modules.storage.remote"]], "bucket (ablator.modules.storage.cloud.gcpconfig attribute)": [[9, "ablator.modules.storage.cloud.GcpConfig.bucket"]], "config_class (ablator.modules.storage.cloud.gcpconfig attribute)": [[9, "ablator.modules.storage.cloud.GcpConfig.config_class"]], "config_class (ablator.modules.storage.remote.remoteconfig attribute)": [[9, "ablator.modules.storage.remote.RemoteConfig.config_class"]], "exclude_chkpts (ablator.modules.storage.cloud.gcpconfig attribute)": [[9, "ablator.modules.storage.cloud.GcpConfig.exclude_chkpts"]], "exclude_chkpts (ablator.modules.storage.remote.remoteconfig attribute)": [[9, "ablator.modules.storage.remote.RemoteConfig.exclude_chkpts"]], "exclude_glob (ablator.modules.storage.cloud.gcpconfig attribute)": [[9, "ablator.modules.storage.cloud.GcpConfig.exclude_glob"]], "exclude_glob (ablator.modules.storage.remote.remoteconfig attribute)": [[9, "ablator.modules.storage.remote.RemoteConfig.exclude_glob"]], "hostname (ablator.modules.storage.remote.remoteconfig attribute)": [[9, "ablator.modules.storage.remote.RemoteConfig.hostname"]], "list_bucket() (ablator.modules.storage.cloud.gcpconfig method)": [[9, "ablator.modules.storage.cloud.GcpConfig.list_bucket"]], "port (ablator.modules.storage.remote.remoteconfig attribute)": [[9, "ablator.modules.storage.remote.RemoteConfig.port"]], "remote_path (ablator.modules.storage.remote.remoteconfig attribute)": [[9, "ablator.modules.storage.remote.RemoteConfig.remote_path"]], "rsync_down() (ablator.modules.storage.cloud.gcpconfig method)": [[9, "ablator.modules.storage.cloud.GcpConfig.rsync_down"]], "rsync_down() (ablator.modules.storage.remote.remoteconfig method)": [[9, "ablator.modules.storage.remote.RemoteConfig.rsync_down"]], "rsync_down_nodes() (ablator.modules.storage.cloud.gcpconfig method)": [[9, "ablator.modules.storage.cloud.GcpConfig.rsync_down_nodes"]], "rsync_up() (ablator.modules.storage.cloud.gcpconfig method)": [[9, "ablator.modules.storage.cloud.GcpConfig.rsync_up"]], "rsync_up() (ablator.modules.storage.remote.remoteconfig method)": [[9, "ablator.modules.storage.remote.RemoteConfig.rsync_up"]], "run_cmd_wait() (in module ablator.modules.storage.remote)": [[9, "ablator.modules.storage.remote.run_cmd_wait"]], "username (ablator.modules.storage.remote.remoteconfig attribute)": [[9, "ablator.modules.storage.remote.RemoteConfig.username"]], "dummy (class in ablator.utils.base)": [[10, "ablator.utils.base.Dummy"]], "ablator.utils": [[10, "module-ablator.utils"]], "ablator.utils.base": [[10, "module-ablator.utils.base"]], "ablator.utils.file": [[10, "module-ablator.utils.file"]], "apply_lambda_to_iter() (in module ablator.utils.base)": [[10, "ablator.utils.base.apply_lambda_to_iter"]], "clean_checkpoints() (in module ablator.utils.file)": [[10, "ablator.utils.file.clean_checkpoints"]], "debugger_is_active() (in module ablator.utils.base)": [[10, "ablator.utils.base.debugger_is_active"]], "default_val_parser() (in module ablator.utils.file)": [[10, "ablator.utils.file.default_val_parser"]], "dict_to_json() (in module ablator.utils.file)": [[10, "ablator.utils.file.dict_to_json"]], "get_gpu_max_mem() (in module ablator.utils.base)": [[10, "ablator.utils.base.get_gpu_max_mem"]], "get_gpu_mem() (in module ablator.utils.base)": [[10, "ablator.utils.base.get_gpu_mem"]], "get_latest_chkpts() (in module ablator.utils.base)": [[10, "ablator.utils.base.get_latest_chkpts"]], "get_lr() (in module ablator.utils.base)": [[10, "ablator.utils.base.get_lr"]], "init_weights() (in module ablator.utils.base)": [[10, "ablator.utils.base.init_weights"]], "iter_to_device() (in module ablator.utils.base)": [[10, "ablator.utils.base.iter_to_device"]], "iter_to_numpy() (in module ablator.utils.base)": [[10, "ablator.utils.base.iter_to_numpy"]], "json_to_dict() (in module ablator.utils.file)": [[10, "ablator.utils.file.json_to_dict"]], "make_sub_dirs() (in module ablator.utils.file)": [[10, "ablator.utils.file.make_sub_dirs"]], "nested_set() (in module ablator.utils.file)": [[10, "ablator.utils.file.nested_set"]], "parse_device() (in module ablator.utils.base)": [[10, "ablator.utils.base.parse_device"]], "save_checkpoint() (in module ablator.utils.file)": [[10, "ablator.utils.file.save_checkpoint"]], "set_seed() (in module ablator.utils.base)": [[10, "ablator.utils.base.set_seed"]]}})